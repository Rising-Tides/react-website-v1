{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport Web3EthContract from 'web3-eth-contract';\nimport { keccak256, toHex } from 'web3-utils';\nconst ETHEREUM_NETWORK = {\n  ROPSTEN: \"ropsten\",\n  MAINNET: \"mainnet\",\n  POLYGON: \"polygon-mainnet\"\n};\nconst abi = [{\n  inputs: [{\n    internalType: \"string\",\n    name: \"_verifier\",\n    type: \"string\"\n  }, {\n    internalType: \"bytes32\",\n    name: \"hashedVerifierId\",\n    type: \"bytes32\"\n  }],\n  name: \"getNodeSet\",\n  outputs: [{\n    internalType: \"uint256\",\n    name: \"currentEpoch\",\n    type: \"uint256\"\n  }, {\n    internalType: \"string[]\",\n    name: \"torusNodeEndpoints\",\n    type: \"string[]\"\n  }, {\n    internalType: \"uint256[]\",\n    name: \"torusNodePubX\",\n    type: \"uint256[]\"\n  }, {\n    internalType: \"uint256[]\",\n    name: \"torusNodePubY\",\n    type: \"uint256[]\"\n  }, {\n    internalType: \"uint256[]\",\n    name: \"torusIndexes\",\n    type: \"uint256[]\"\n  }],\n  stateMutability: \"view\",\n  type: \"function\"\n}];\n\nclass NodeDetailManager {\n  constructor() {\n    let {\n      network = ETHEREUM_NETWORK.MAINNET,\n      proxyAddress = \"0xf20336e16B5182637f09821c27BDe29b0AFcfe80\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _defineProperty(this, \"_currentEpoch\", \"19\");\n\n    _defineProperty(this, \"_torusNodeEndpoints\", [\"https://torus-19.torusnode.com/jrpc\", \"https://torus-node.ens.domains/jrpc\", \"https://torus-node.matic.network/jrpc\", \"https://torus.zilliqa.network/jrpc\", \"https://torus-mainnet.cosmos.network/jrpc\", \"https://torus2.etherscan.com/jrpc\", \"https://torus-node-v2.skalelabs.com/jrpc\", \"https://torus-node.binancex.dev/jrpc\", \"https://torusnode.ont.io/jrpc\"]);\n\n    _defineProperty(this, \"_torusNodePub\", [{\n      X: \"bbe83c64177c3775550e6ba6ac2bc059f6847d644c9e4894e42c60d7974d8c2b\",\n      Y: \"82b49a7caf70def38cdad2740af45c1e4f969650105c5019a29bb18b21a9acb5\"\n    }, {\n      X: \"c208cac4ef9a47d386097a9c915b28e9cb89213abee8d26a17198ee261201b0d\",\n      Y: \"c7db2fe4631109f40833de9dc78d07e35706549ee48fa557b33e4e75e1047873\"\n    }, {\n      X: \"ca1766bb426d4ca5582818a0c5439d560ea64f5baa060793ab29dd3d0ceacfe\",\n      Y: \"d46c1d08c40e1306e1bca328c2287b8268166b11a1ba4b8442ea2ad0c5e32152\"\n    }, {\n      X: \"c3934dd2f6f4b3d2e1e398cc501e143c1e1a381b52feb6d1525af34d16253768\",\n      Y: \"71f5141a5035799099f5ea3e241e66946bc55dc857ac3bd7d6fcdb8dcd3eeeef\"\n    }, {\n      X: \"22e66f1929631d00bf026227581597f085fd94fd952fc0dca9f0833398b5c064\",\n      Y: \"6088b3912e10a1e9d50355a609c10db7d188f16a2e2fd7357e51bf4f6a74f0a1\"\n    }, {\n      X: \"9dc9fa410f3ce9eb70df70cdea00a49f2c4cc7a31c08c0dab5f863ed35ff5139\",\n      Y: \"627a291cb87a75c61da3f65d6818e1e05e360217179817ed27e8c73bca7ec122\"\n    }, {\n      X: \"118b9fc07e97b096d899b9f6658463ce6a8caa64038e37fc969df4e6023dd8c6\",\n      Y: \"baf9fa4e51770f4796ea165dd03a769b8606681a38954a0a92c4cbffd6609ce9\"\n    }, {\n      X: \"8a6d8b925da15a273dec3d8f8395ec35cd6878f274b2b180e4e106999db64043\",\n      Y: \"96f67f870c157743da0b1eb84d89bf30500d74dc84c11f501ee1cb013acc8c46\"\n    }, {\n      X: \"39cecb62e863729f572f7dfc46c24867981bf04bb405fed0df39e33984bfade5\",\n      Y: \"61c2364434012e68a2be2e9952805037e52629d7762fafc8e10e9fb5bad8f790\"\n    }]);\n\n    _defineProperty(this, \"_torusIndexes\", [1, 2, 3, 4, 5, 6, 7, 8, 9]);\n\n    _defineProperty(this, \"_network\", ETHEREUM_NETWORK.MAINNET);\n\n    _defineProperty(this, \"nodeListAddress\", void 0);\n\n    _defineProperty(this, \"updated\", void 0);\n\n    _defineProperty(this, \"nodeListContract\", void 0);\n\n    let url;\n\n    try {\n      const localUrl = new URL(network);\n      url = localUrl.href;\n    } catch (_) {\n      const projectId = \"b8cdb0e4cff24599a286bf8e87ff1c96\";\n      url = \"https://\".concat(network, \".infura.io/v3/\").concat(projectId);\n    }\n\n    Web3EthContract.setProvider(url);\n    this.nodeListContract = new Web3EthContract(abi, proxyAddress);\n    this.nodeListAddress = proxyAddress;\n    this.updated = false;\n    this._network = network;\n  }\n\n  get _nodeDetails() {\n    return {\n      currentEpoch: this._currentEpoch,\n      nodeListAddress: this.nodeListAddress,\n      torusNodeEndpoints: this._torusNodeEndpoints,\n      torusNodePub: this._torusNodePub,\n      torusIndexes: this._torusIndexes,\n      updated: this.updated\n    };\n  }\n\n  async getNodeDetails(_ref) {\n    let {\n      skip = false,\n      verifier,\n      verifierId\n    } = _ref;\n\n    try {\n      if (skip && this._network === ETHEREUM_NETWORK.MAINNET) return this._nodeDetails; // Do this only for mainnet where the list is static irrespective of verifier, verifierId\n\n      if (this.updated && this._network === ETHEREUM_NETWORK.MAINNET) return this._nodeDetails;\n      const hashedVerifierId = keccak256(verifierId);\n      const nodeDetails = await this.nodeListContract.methods.getNodeSet(verifier, hashedVerifierId).call();\n      const {\n        currentEpoch,\n        torusNodeEndpoints,\n        torusNodePubX,\n        torusNodePubY,\n        torusIndexes\n      } = nodeDetails;\n      this._currentEpoch = currentEpoch;\n      this._torusIndexes = torusIndexes.map(x => Number(x));\n      const updatedEndpoints = [];\n      const updatedNodePub = [];\n\n      for (let index = 0; index < torusNodeEndpoints.length; index += 1) {\n        const endPointElement = torusNodeEndpoints[index];\n        const pubKx = torusNodePubX[index];\n        const pubKy = torusNodePubY[index];\n        const endpoint = \"https://\".concat(endPointElement.split(\":\")[0], \"/jrpc\");\n        updatedEndpoints.push(endpoint);\n        updatedNodePub.push({\n          X: toHex(pubKx).replace(\"0x\", \"\"),\n          Y: toHex(pubKy).replace(\"0x\", \"\")\n        });\n      }\n\n      this._torusNodeEndpoints = updatedEndpoints;\n      this._torusNodePub = updatedNodePub;\n      this.updated = true;\n      return this._nodeDetails;\n    } catch (error) {\n      if (this._network === ETHEREUM_NETWORK.MAINNET) {\n        return this._nodeDetails;\n      }\n\n      throw error;\n    }\n  }\n\n}\n\nexport { ETHEREUM_NETWORK, abi, NodeDetailManager as default };","map":{"version":3,"mappings":"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","names":["ETHEREUM_NETWORK","ROPSTEN","MAINNET","POLYGON","abi","inputs","internalType","name","type","outputs","stateMutability","NodeDetailManager","constructor","network","proxyAddress","X","Y","url","localUrl","URL","href","_","projectId","Web3EthContract","setProvider","nodeListContract","nodeListAddress","updated","_network","_nodeDetails","currentEpoch","_currentEpoch","torusNodeEndpoints","_torusNodeEndpoints","torusNodePub","_torusNodePub","torusIndexes","_torusIndexes","getNodeDetails","skip","verifier","verifierId","hashedVerifierId","keccak256","nodeDetails","methods","getNodeSet","call","torusNodePubX","torusNodePubY","map","x","Number","updatedEndpoints","updatedNodePub","index","length","endPointElement","pubKx","pubKy","endpoint","split","push","toHex","replace","error"],"sources":["../src/interfaces.ts","../src/nodeDetailManager.ts"],"sourcesContent":[null,null]},"metadata":{},"sourceType":"module"}