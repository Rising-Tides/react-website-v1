{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { BaseController, createEventEmitterProxy } from '@toruslabs/base-controllers';\nimport { WalletInitializationError } from '@web3auth/base';\nimport { ethErrors } from 'eth-rpc-errors';\nimport getCreateRandomId from 'json-rpc-random-id';\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nclass BaseProvider extends BaseController {\n  // should be Assigned in setupProvider\n  constructor(_ref) {\n    let {\n      config,\n      state\n    } = _ref;\n    super({\n      config,\n      state\n    });\n\n    _defineProperty(this, \"_providerEngineProxy\", null);\n\n    if (!config.chainConfig) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainConfig\");\n    if (!config.chainConfig.chainId) throw WalletInitializationError.invalidProviderConfigError(\"Please provide chainId inside chainConfig\");\n    if (!config.chainConfig.rpcTarget) throw WalletInitializationError.invalidProviderConfigError(\"Please provide rpcTarget inside chainConfig\");\n    this.defaultState = {\n      chainId: \"loading\"\n    };\n    this.defaultConfig = {\n      chainConfig: config.chainConfig,\n      networks: {\n        [config.chainConfig.chainId]: config.chainConfig\n      }\n    };\n    super.initialize();\n  }\n\n  get provider() {\n    return this._providerEngineProxy;\n  }\n\n  set provider(_) {\n    throw new Error(\"Method not implemented.\");\n  }\n\n  addChain(chainConfig) {\n    if (!chainConfig.chainId) throw ethErrors.rpc.invalidParams(\"chainId is required\");\n    if (!chainConfig.rpcTarget) throw ethErrors.rpc.invalidParams(\"chainId is required\");\n    this.configure({\n      networks: _objectSpread(_objectSpread({}, this.config.networks), {}, {\n        [chainConfig.chainId]: chainConfig\n      })\n    });\n  }\n\n  getChainConfig(chainId) {\n    var _this$config$networks;\n\n    const chainConfig = (_this$config$networks = this.config.networks) === null || _this$config$networks === void 0 ? void 0 : _this$config$networks[chainId];\n    if (!chainConfig) throw ethErrors.rpc.invalidRequest(\"Chain \".concat(chainId, \" is not supported, please add chainConfig for it\"));\n    return chainConfig;\n  }\n\n  getProviderEngineProxy() {\n    return this._providerEngineProxy;\n  }\n\n  updateProviderEngineProxy(providerEngineProxy) {\n    if (this._providerEngineProxy) {\n      this._providerEngineProxy.setTarget(providerEngineProxy);\n    } else {\n      this._providerEngineProxy = createEventEmitterProxy(providerEngineProxy);\n    }\n  }\n\n}\n\nconst createRandomId = getCreateRandomId();\nexport { BaseProvider, createRandomId };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeM,MAAgBA,YAAhB,SACIC,cADJ,CACwB;AAG5B;AAGAC,cAAuDC,IAAvD,EAAuD;AAA3C;AAAEC,YAAF;AAAUC;AAAV,QAA2CF,IAA3C;AACJ;AAAEC,YAAF;AAAUC;AAAV;;AAD+CC,kDAFQ,IAER;;AAEjD,SAACF,MAAM,CAACG,WAAR,EAAqB,MAAMC,yBAAyB,CAACC,0BAA1BD,CAAqD,4BAArDA,CAAN;AACzB,QAAI,CAACJ,MAAM,CAACG,WAAPH,CAAmBM,OAAxB,EAAiC,MAAMF,yBAAyB,CAACC,0BAA1BD,CAAqD,2CAArDA,CAAN;AACjC,QAAI,CAACJ,MAAM,CAACG,WAAPH,CAAmBO,SAAxB,EAAmC,MAAMH,yBAAyB,CAACC,0BAA1BD,CAAqD,6CAArDA,CAAN;AACnC,SAAKI,YAAL,GAAoB;AAClBF,aAAO,EAAE;AADS,KAApB;AAGA,SAAKG,aAAL,GAAqB;AACnBN,iBAAW,EAAEH,MAAM,CAACG,WADD;AAEnBO,cAAQ,EAAE;AAAE,SAACV,MAAM,CAACG,WAAPH,CAAmBM,OAApB,GAA8BN,MAAM,CAACG;AAAvC;AAFS,KAArB;AAIA,UAAMQ,UAAN;AACD;;AAEW,MAARC,QAAQ;AACV,WAAO,KAAKC,oBAAZ;AACD;;AAEW,MAARD,QAAQ,CAACE,CAAD,EAAE;AACZ,UAAM,IAAIC,KAAJ,CAAU,yBAAV,CAAN;AACD;;AAEMC,UAAQ,CAACb,WAAD,EAA+B;AAC5C,QAAI,CAACA,WAAW,CAACG,OAAjB,EAA0B,MAAMW,SAAS,CAACC,GAAVD,CAAcE,aAAdF,CAA4B,qBAA5BA,CAAN;AAC1B,QAAI,CAACd,WAAW,CAACI,SAAjB,EAA4B,MAAMU,SAAS,CAACC,GAAVD,CAAcE,aAAdF,CAA4B,qBAA5BA,CAAN;AAC5B,SAAKG,SAAL,CAAe;AACbV,cAAQ,kCAAO,KAAKV,MAAL,CAAYU,QAAnB;AAA8BP,oBAAW,CAACG,OAAZH,GAAsBA;AAApD;AADK,KAAf;AAGD;;AAEMkB,gBAAc,CAACf,OAAD,EAAgB;AAAA;;AAC7BH,qBAAW,4BAAG,KAAKH,MAAL,CAAYU,QAAf,0DAAGY,qBAAuBhB,SAArCH;AACF,SAACA,WAAD,EAAc,MAAMc,SAAS,CAACC,GAAVD,CAAcM,cAAdN,CAAsCX,yBAA5C,kDAA4CA,CAAtCW,CAAN;AAClB,WAAOd,WAAP;AACD;;AAESqB,wBAAsB;AAC9B,WAAO,KAAKX,oBAAZ;AACD;;AAESY,2BAAyB,CAACC,mBAAD,EAA8C;AAC3E,aAAKb,oBAAL,EAA2B;AAC5B,WAAKA,oBAAL,CAAkCc,SAAlC,CAA4CD,mBAA5C;AADH,KAAI,MAEG;AACL,WAAKb,oBAAL,GAA4Be,uBAAuB,CAA2BF,mBAA3B,CAAnD;AACD;AACF;;AArD2B;;ACfjBG,oBAAc,GAAGC,iBAAiB,EAAlCD","names":["BaseProvider","BaseController","constructor","_ref","config","state","_defineProperty","chainConfig","WalletInitializationError","invalidProviderConfigError","chainId","rpcTarget","defaultState","defaultConfig","networks","initialize","provider","_providerEngineProxy","_","Error","addChain","ethErrors","rpc","invalidParams","configure","getChainConfig","_this$config$networks","invalidRequest","getProviderEngineProxy","updateProviderEngineProxy","providerEngineProxy","setTarget","createEventEmitterProxy","createRandomId","getCreateRandomId"],"sources":["../src/baseProvider.ts","../src/utils.ts"],"sourcesContent":[null,null]},"metadata":{},"sourceType":"module"}