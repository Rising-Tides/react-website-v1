{"ast":null,"code":"var _jsxFileName = \"/Users/scotteinsidler/Documents/GitHub/react-website-v1/src/components/HeroSection.js\";\nimport React from 'react';\nimport '../App.css';\nimport { Button } from './Button';\nimport './HeroSection.css';\nimport { useEffect } from 'react'; // import { useState } from 'react';\n\nimport $ from 'jquery'; // import ethSend from 'eth-send';\n// import Web3 from 'web3';\n// import { ethers } from 'ethers';\n// import contract from '../contracts/NFTCollectible.json';\n\nexport const tipJar = \"0x8DAA10845A8144469da192ef18b13bCdFBb73591\";\nexport const contractAddress = \"0x836049Ddc0e177D2f52871b2d6e443dac0f2b659\"; // const abi = contract.abi;\n\nfunction HeroSection() {\n  // const [currentAccount, setCurrentAccount] = useState(null);\n  // const [setCurrentAccount] = useState(null);\n  // const checkWalletIsConnected = async () => { \n  //   const { ethereum } = window;\n  //   // if (!ethereum) {\n  //   //   console.log(\"Make sure you have Metamask installed!\");\n  //   //   return;\n  //   // } else {\n  //   //   console.log(\"Wallet exists! We're ready to go!\")\n  //   // }\n  //   if (window.ethereum) {\n  //     handleEthereum();\n  //   } else {\n  //     window.addEventListener('ethereum#initialized', handleEthereum, {\n  //       once: true,\n  //     });\n  //     // If the event is not dispatched by the end of the timeout,\n  //     // the user probably doesn't have MetaMask installed.\n  //     setTimeout(handleEthereum, 3000); // 3 seconds\n  //   }\n  //   function handleEthereum() {\n  //     const { ethereum } = window;\n  //     if (ethereum && ethereum.isMetaMask) {\n  //       console.log('Ethereum successfully detected!');\n  //       // Access the decentralized web!\n  //     } else {\n  //       console.log('Please install MetaMask  ');\n  //     }\n  //   }\n  //   const accounts = await ethereum.request({ method: 'eth_accounts' });\n  //   if (accounts.length !== 0) {\n  //     const account = accounts[0];\n  //     console.log(\"Found an authorized account: \", account);\n  //     setCurrentAccount(account); \n  //   } else {\n  //     console.log(\"No authorized account found\");\n  //   }\n  // }\n  // const connectWalletHandler = async () => { \n  //   const { ethereum } = window;\n  //   if (!ethereum) {\n  //      alert(\"Please install Metamask\");\n  //     window.location.replace(\"https://metamask.io/download/\");\n  //   }\n  //   try {\n  //     const accounts = await ethereum.request({method: 'eth_requestAccounts' });\n  //     console.log(\"Found an account! Address: \", accounts[0]);\n  //     setCurrentAccount(accounts[0]);\n  //   } catch (err) {\n  //     console.log(err)\n  //   }\n  // }\n  // const mintNftHandler = async () => { \n  //   try {\n  //     const { ethereum } = window;\n  //     if (ethereum) {\n  //       const provider = new ethers.providers.Web3Provider(ethereum);\n  //       const signer = provider.getSigner();\n  //       const nftContract = new ethers.Contract(contractAddress, abi, signer);\n  //       console.log(\"Initialize payment\");\n  //       let nftTxn = await nftContract.mintNFTs(1, { value: ethers.utils.parseEther(\"0.01\") });\n  //       console.log(\"Mining... please wait\");\n  //       await nftTxn.wait();\n  //       console.log(\"Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash\");\n  //     } else {\n  //       console.log(\"Ethereum object does not exist\");\n  //     }\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // }\n  // const tipETH = async () => { \n  //   try {\n  //     const { ethereum } = window;\n  //     if (ethereum) {\n  //       // const provider = new ethers.providers.Web3Provider(ethereum);\n  //       // const signer = provider.getSigner();\n  //       const value = 0.01 // ether\n  //       window.open(`https://pay.buildship.dev/to/${tipJar}?value=${value}`);\n  //       // const nftContract = new ethers.Contract(contractAddress, abi, signer);\n  //       // console.log(\"Initialize payment\");\n  //       // let nftTxn = await nftContract.mintNFTs(1, { value: ethers.utils.parseEther(\"0.01\") });\n  //       // console.log(\"Mining... please wait\");\n  //       // await nftTxn.wait();\n  //       // console.log(\"Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash\");\n  //     } else {\n  //       console.log(\"Ethereum object does not exist\");\n  //     }\n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // }\n  // // const connectWalletButton = () => {\n  // //   return (\n  // //     <Button  \n  // //       className='btns'\n  // //       buttonStyle='btn--primary'\n  // //       buttonSize='btn--large'\n  // //       onClick={connectWalletHandler}\n  // //       >\n  // //       CONNECT WALLET\n  // //     </Button>\n  // //   )\n  // // }\n  // const mintNftButton = () => {\n  //   return (\n  //     // <button onClick={mintNftHandler} className='cta-button mint-nft-button'>\n  //     //   Mint NFT\n  //     // </button>\n  //     <Button  \n  //       className='btns'\n  //       buttonStyle='btn--outline'\n  //       buttonSize='btn--large'\n  //       // onClick={mintNftHandler}\n  //       onClick={tipETH}\n  //       >\n  //       Send Tip\n  //     </Button>\n  //   )\n  // }\n  // var images = [\"img_1.jpg\",\"img_2.jpg\",\"img_3.jpg\"];\n  // function slideshow() { \n  //   if (cnt>=images.length) cnt=0; \n  //     $('.hero-container').css(\"background-image\",\"url(\"+images[cnt++]+\")\");\n  // }\n  useEffect(() => {\n    // checkWalletIsConnected();\n    var images = [\"images/IMG_9.jpg\", \"images/IMG_2.jpg\", \"images/IMG_6.jpg\", \"images/IMG_4.jpg\"];\n    var cnt = 0;\n    const iId = setInterval(() => {\n      if (cnt >= images.length) cnt = 0;\n      $('.hero-container').css(\"background-image\", \"url(\" + images[cnt++] + \")\", \"center center/cover no-repeat\");\n    }, 2500);\n    return () => clearInterval(iId);\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero-btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://instagram.com/xojustkirst\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btns\",\n    buttonStyle: \"btn--outline\",\n    buttonSize: \"btn--large\" // onClick={url('https://instagram.com/xojustkirst')}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-instagram\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 15\n    }\n  })))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btns\",\n    buttonStyle: \"btn--outline\",\n    buttonSize: \"btn--large\" // onClick={window.open('https://instagram.com/xojustkirst')}\n    ,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"a\", {\n    href: \"https://twitch.tv/xojustkirst\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"i\", {\n    className: \"fa fa-twitch\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 13\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }));\n}\n\nexport default HeroSection;","map":{"version":3,"sources":["/Users/scotteinsidler/Documents/GitHub/react-website-v1/src/components/HeroSection.js"],"names":["React","Button","useEffect","$","tipJar","contractAddress","HeroSection","images","cnt","iId","setInterval","length","css","clearInterval"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP;AACA,SAASC,MAAT,QAAuB,UAAvB;AACA,OAAO,mBAAP;AACA,SAASC,SAAT,QAA0B,OAA1B,C,CACA;;AACA,OAAOC,CAAP,MAAc,QAAd,C,CAEA;AACA;AAEA;AACA;;AAEA,OAAO,MAAMC,MAAM,GAAG,4CAAf;AACP,OAAO,MAAMC,eAAe,GAAG,4CAAxB,C,CACP;;AAGA,SAASC,WAAT,GAAuB;AACrd;AACA,QAAIK,MAAM,GAAG,CAAC,kBAAD,EAAqB,kBAArB,EAAwC,kBAAxC,EAA4D,kBAA5D,CAAb;AAEA,QAAIC,GAAG,GAAG,CAAV;AACA,UAAMC,GAAG,GAACC,WAAW,CAAC,MAAM;AAC1B,UAAIF,GAAG,IAAED,MAAM,CAACI,MAAhB,EAAwBH,GAAG,GAAC,CAAJ;AACtBL,MAAAA,CAAC,CAAC,iBAAD,CAAD,CAAqBS,GAArB,CAAyB,kBAAzB,EAA4C,SAAOL,MAAM,CAACC,GAAG,EAAJ,CAAb,GAAqB,GAAjE,EAAsE,+BAAtE;AACH,KAHoB,EAGlB,IAHkB,CAArB;AAIA,WAAO,MAAMK,aAAa,CAACJ,GAAD,CAA1B;AAED,GAXQ,EAWN,EAXM,CAAT;AAaA,sBACE;AAAK,IAAA,SAAS,EAAC,gBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,IAAI,EAAC,mCAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,WAAW,EAAC,cAFd;AAGE,IAAA,UAAU,EAAC,YAHb,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME;AAAG,IAAA,SAAS,EAAC,iBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CAFF,CADF,CADF,eAcE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,MADZ;AAEE,IAAA,WAAW,EAAC,cAFd;AAGE,IAAA,UAAU,EAAC,YAHb,CAIE;AAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAMA;AAAG,IAAA,IAAI,EAAC,+BAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAG,IAAA,SAAS,EAAC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CANA,CADF,CAdF,CANF,eAkCE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAlCF,CADF;AAyCD;;AAED,eAAeH,WAAf","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport { Button } from './Button';\nimport './HeroSection.css';\nimport { useEffect } from 'react';\n// import { useState } from 'react';\nimport $ from 'jquery';\n\n// import ethSend from 'eth-send';\n// import Web3 from 'web3';\n\n// import { ethers } from 'ethers';\n// import contract from '../contracts/NFTCollectible.json';\n\nexport const tipJar = \"0x8DAA10845A8144469da192ef18b13bCdFBb73591\";\nexport const contractAddress = \"0x836049Ddc0e177D2f52871b2d6e443dac0f2b659\";\n// const abi = contract.abi;\n\n\nfunction HeroSection() {\n  // const [currentAccount, setCurrentAccount] = useState(null);\n  // const [setCurrentAccount] = useState(null);\n\n  // const checkWalletIsConnected = async () => { \n  //   const { ethereum } = window;\n  \n  //   // if (!ethereum) {\n  //   //   console.log(\"Make sure you have Metamask installed!\");\n  //   //   return;\n  //   // } else {\n  //   //   console.log(\"Wallet exists! We're ready to go!\")\n  //   // }\n  //   if (window.ethereum) {\n  //     handleEthereum();\n  //   } else {\n  //     window.addEventListener('ethereum#initialized', handleEthereum, {\n  //       once: true,\n  //     });\n    \n  //     // If the event is not dispatched by the end of the timeout,\n  //     // the user probably doesn't have MetaMask installed.\n  //     setTimeout(handleEthereum, 3000); // 3 seconds\n  //   }\n    \n  //   function handleEthereum() {\n  //     const { ethereum } = window;\n  //     if (ethereum && ethereum.isMetaMask) {\n  //       console.log('Ethereum successfully detected!');\n  //       // Access the decentralized web!\n  //     } else {\n  //       console.log('Please install MetaMask  ');\n  //     }\n  //   }\n  //   const accounts = await ethereum.request({ method: 'eth_accounts' });\n  \n  //   if (accounts.length !== 0) {\n  //     const account = accounts[0];\n  //     console.log(\"Found an authorized account: \", account);\n  //     setCurrentAccount(account); \n  //   } else {\n  //     console.log(\"No authorized account found\");\n  //   }\n  // }\n  \n  // const connectWalletHandler = async () => { \n  //   const { ethereum } = window;\n  \n  //   if (!ethereum) {\n  //      alert(\"Please install Metamask\");\n  //     window.location.replace(\"https://metamask.io/download/\");\n  //   }\n  \n  //   try {\n  //     const accounts = await ethereum.request({method: 'eth_requestAccounts' });\n  //     console.log(\"Found an account! Address: \", accounts[0]);\n  //     setCurrentAccount(accounts[0]);\n  //   } catch (err) {\n  //     console.log(err)\n  //   }\n  // }\n  \n  // const mintNftHandler = async () => { \n  //   try {\n  //     const { ethereum } = window;\n  \n  //     if (ethereum) {\n  //       const provider = new ethers.providers.Web3Provider(ethereum);\n  //       const signer = provider.getSigner();\n  //       const nftContract = new ethers.Contract(contractAddress, abi, signer);\n  \n  //       console.log(\"Initialize payment\");\n  //       let nftTxn = await nftContract.mintNFTs(1, { value: ethers.utils.parseEther(\"0.01\") });\n  \n  //       console.log(\"Mining... please wait\");\n  //       await nftTxn.wait();\n  \n  //       console.log(\"Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash\");\n  \n  //     } else {\n  //       console.log(\"Ethereum object does not exist\");\n  //     }\n  \n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // }\n  \n  // const tipETH = async () => { \n  //   try {\n  //     const { ethereum } = window;\n  \n  //     if (ethereum) {\n  //       // const provider = new ethers.providers.Web3Provider(ethereum);\n  //       // const signer = provider.getSigner();\n  //       const value = 0.01 // ether\n  //       window.open(`https://pay.buildship.dev/to/${tipJar}?value=${value}`);\n      \n  //       // const nftContract = new ethers.Contract(contractAddress, abi, signer);\n  \n  //       // console.log(\"Initialize payment\");\n  //       // let nftTxn = await nftContract.mintNFTs(1, { value: ethers.utils.parseEther(\"0.01\") });\n  \n  //       // console.log(\"Mining... please wait\");\n  //       // await nftTxn.wait();\n  \n  //       // console.log(\"Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash\");\n  \n  //     } else {\n  //       console.log(\"Ethereum object does not exist\");\n  //     }\n  \n  //   } catch (err) {\n  //     console.log(err);\n  //   }\n  // }\n  \n  // // const connectWalletButton = () => {\n  // //   return (\n  // //     <Button  \n  // //       className='btns'\n  // //       buttonStyle='btn--primary'\n  // //       buttonSize='btn--large'\n  // //       onClick={connectWalletHandler}\n  // //       >\n  // //       CONNECT WALLET\n  // //     </Button>\n  // //   )\n  // // }\n  \n  // const mintNftButton = () => {\n  //   return (\n  //     // <button onClick={mintNftHandler} className='cta-button mint-nft-button'>\n  //     //   Mint NFT\n  //     // </button>\n  //     <Button  \n  //       className='btns'\n  //       buttonStyle='btn--outline'\n  //       buttonSize='btn--large'\n  //       // onClick={mintNftHandler}\n  //       onClick={tipETH}\n  //       >\n  //       Send Tip\n  //     </Button>\n  //   )\n  // }\n  // var images = [\"img_1.jpg\",\"img_2.jpg\",\"img_3.jpg\"];\n  \n  // function slideshow() { \n  //   if (cnt>=images.length) cnt=0; \n  //     $('.hero-container').css(\"background-image\",\"url(\"+images[cnt++]+\")\");\n  // }\n\n  useEffect(() => {\n    // checkWalletIsConnected();\n    var images = [\"images/IMG_9.jpg\", \"images/IMG_2.jpg\",\"images/IMG_6.jpg\", \"images/IMG_4.jpg\"];\n\n    var cnt = 0;\n    const iId=setInterval(() => {\n      if (cnt>=images.length) cnt=0; \n        $('.hero-container').css(\"background-image\",\"url(\"+images[cnt++]+\")\", \"center center/cover no-repeat\");\n    }, 2500);\n    return () => clearInterval(iId);\n\n  }, [])  \n\n  return (\n    <div className='hero-container'>\n      {/* <video src='/videos/video-2.mp4' autoPlay loop muted /> */}\n      {/* <img src='/images/IMG_1.jpg'>''</img> */}\n      {/* <h1>XOJUSTKIRST</h1> */}\n      {/* <p>What are you waiting for?</p> */}\n      {/* <p>Send Kirstin some Ethereum!</p> */}\n      <div className='hero-btns'>\n        <div>\n          <a href='https://instagram.com/xojustkirst'> \n\n            <Button\n              className='btns'\n              buttonStyle='btn--outline'\n              buttonSize='btn--large'\n              // onClick={url('https://instagram.com/xojustkirst')}\n            >\n              <i className='fa fa-instagram'/>\n            </Button> \n          </a>\n        </div>\n        <div>\n          <Button\n            className='btns'\n            buttonStyle='btn--outline'\n            buttonSize='btn--large'\n            // onClick={window.open('https://instagram.com/xojustkirst')}\n          >\n          <a href='https://twitch.tv/xojustkirst'> \n            <i className='fa fa-twitch' />\n          </a>\n          </Button> \n        </div>\n\n      </div>\n      <div>\n        {/* {currentAccount ? mintNftButton() : connectWalletButton()} */}\n        {/* {mintNftButton()} */}\n      </div>      \n    </div>\n  );\n}\n\nexport default HeroSection;\n\n"]},"metadata":{},"sourceType":"module"}