{"ast":null,"code":"import { CHAIN_NAMESPACES, SOLANA_ADAPTERS, EVM_ADAPTERS, getChainConfig, WALLET_ADAPTERS, log, ADAPTER_CATEGORY, ADAPTER_STATUS, ADAPTER_EVENTS } from '@web3auth/base';\nimport _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { Web3AuthCore } from '@web3auth/core';\nimport LoginModal, { getAdapterSocialLogins, OPENLOGIN_PROVIDERS, LOGIN_MODAL_EVENTS } from '@web3auth/ui';\nconst defaultSolanaDappModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: {\n    [SOLANA_ADAPTERS.TORUS_SOLANA]: {\n      label: \"Torus Solana Wallet\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    },\n    [SOLANA_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    },\n    [SOLANA_ADAPTERS.PHANTOM]: {\n      label: \"Phantom\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    }\n  }\n};\nconst defaultEvmDappModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: {\n    [EVM_ADAPTERS.TORUS_EVM]: {\n      label: \"Torus Wallet\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    },\n    [EVM_ADAPTERS.METAMASK]: {\n      label: \"MetaMask\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    },\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    },\n    [EVM_ADAPTERS.WALLET_CONNECT_V1]: {\n      label: \"Wallet Connect\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    }\n  }\n};\nconst defaultSolanaWalletModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.SOLANA,\n  adapters: {\n    [SOLANA_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    }\n  }\n};\nconst defaultEvmWalletModalConfig = {\n  chainNamespace: CHAIN_NAMESPACES.EIP155,\n  adapters: {\n    [EVM_ADAPTERS.OPENLOGIN]: {\n      label: \"OpenLogin\",\n      showOnModal: true,\n      showOnMobile: true,\n      showOnDesktop: true\n    }\n  }\n};\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nconst getDefaultAdapterModule = async params => {\n  const {\n    name,\n    customChainConfig,\n    clientId\n  } = params;\n  if (!Object.values(CHAIN_NAMESPACES).includes(customChainConfig.chainNamespace)) throw new Error(\"Invalid chainNamespace: \".concat(customChainConfig.chainNamespace));\n\n  const finalChainConfig = _objectSpread$1(_objectSpread$1({}, getChainConfig(customChainConfig.chainNamespace, customChainConfig === null || customChainConfig === void 0 ? void 0 : customChainConfig.chainId)), customChainConfig || {});\n\n  if (name === WALLET_ADAPTERS.TORUS_EVM) {\n    const {\n      TorusWalletAdapter\n    } = await import('@web3auth/torus-evm-adapter');\n    const adapter = new TorusWalletAdapter({\n      chainConfig: finalChainConfig\n    });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.TORUS_SOLANA) {\n    const {\n      SolanaWalletAdapter\n    } = await import('@web3auth/torus-solana-adapter');\n    const adapter = new SolanaWalletAdapter({\n      chainConfig: finalChainConfig\n    });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.METAMASK) {\n    const {\n      MetamaskAdapter\n    } = await import('@web3auth/metamask-adapter');\n    const adapter = new MetamaskAdapter({\n      chainConfig: finalChainConfig\n    });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.PHANTOM) {\n    const {\n      PhantomAdapter\n    } = await import('@web3auth/phantom-adapter');\n    const adapter = new PhantomAdapter({\n      chainConfig: finalChainConfig\n    });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.WALLET_CONNECT_V1) {\n    const {\n      WalletConnectV1Adapter\n    } = await import('@web3auth/wallet-connect-v1-adapter');\n    const adapter = new WalletConnectV1Adapter({\n      chainConfig: finalChainConfig\n    });\n    return adapter;\n  } else if (name === WALLET_ADAPTERS.OPENLOGIN) {\n    const {\n      OpenloginAdapter,\n      getOpenloginDefaultOptions\n    } = await import('@web3auth/openlogin-adapter');\n    const defaultOptions = getOpenloginDefaultOptions(customChainConfig.chainNamespace, customChainConfig === null || customChainConfig === void 0 ? void 0 : customChainConfig.chainId);\n    const adapter = new OpenloginAdapter(_objectSpread$1(_objectSpread$1({}, defaultOptions), {}, {\n      chainConfig: _objectSpread$1(_objectSpread$1({}, defaultOptions.chainConfig || {}), finalChainConfig),\n      adapterSettings: _objectSpread$1(_objectSpread$1({}, defaultOptions.adapterSettings), {}, {\n        clientId\n      })\n    }));\n    return adapter;\n  }\n\n  throw new Error(\"Invalid wallet adapter name\");\n};\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nclass Web3Auth extends Web3AuthCore {\n  constructor(options) {\n    var _this$options$uiConfi, _this$options$uiConfi2;\n\n    super(options);\n\n    _defineProperty(this, \"loginModal\", void 0);\n\n    _defineProperty(this, \"options\", void 0);\n\n    _defineProperty(this, \"modalConfig\", defaultEvmDappModalConfig);\n\n    this.options = _objectSpread({}, options);\n    const providedChainConfig = this.options.chainConfig;\n\n    if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.SOLANA) {\n      if (options.authMode === \"WALLET\") {\n        // default config for solana wallet modal\n        this.modalConfig = defaultSolanaWalletModalConfig;\n      } else {\n        // default config for solana dapp modal\n        this.modalConfig = defaultSolanaDappModalConfig;\n      }\n    } else if (providedChainConfig.chainNamespace === CHAIN_NAMESPACES.EIP155) {\n      if (options.authMode === \"WALLET\") {\n        // default config for evm wallet modal\n        this.modalConfig = defaultEvmWalletModalConfig;\n      } else {\n        // default config for evm dapp modal\n        this.modalConfig = defaultEvmDappModalConfig;\n      }\n    } else {\n      throw new Error(\"Invalid chainNamespace provided: \".concat(providedChainConfig.chainNamespace));\n    }\n\n    this.loginModal = new LoginModal({\n      theme: (_this$options$uiConfi = this.options.uiConfig) === null || _this$options$uiConfi === void 0 ? void 0 : _this$options$uiConfi.theme,\n      appLogo: ((_this$options$uiConfi2 = this.options.uiConfig) === null || _this$options$uiConfi2 === void 0 ? void 0 : _this$options$uiConfi2.appLogo) || \"\",\n      version: \"\",\n      adapterListener: this,\n      displayErrorsOnModal: this.options.displayErrorsOnModal\n    });\n    this.subscribeToLoginModalEvents();\n  }\n\n  async initModal(params) {\n    super.checkInitRequirements();\n    await this.loginModal.initModal();\n    const providedChainConfig = this.options.chainConfig; // merge default adapters with the custom configured adapters.\n\n    const allAdapters = [...new Set([...Object.keys(this.modalConfig.adapters || {}), ...Object.keys(this.walletAdapters)])];\n    const adapterConfigurationPromises = allAdapters.map(async adapterName => {\n      var _this$modalConfig$ada, _params$modalConfig, _this$modalConfig$ada2, _this$modalConfig$ada3; // start with the default config of adapter.\n\n\n      let adapterConfig = ((_this$modalConfig$ada = this.modalConfig.adapters) === null || _this$modalConfig$ada === void 0 ? void 0 : _this$modalConfig$ada[adapterName]) || {\n        label: adapterName,\n        showOnModal: true,\n        showOnMobile: true,\n        showOnDesktop: true\n      }; // override the default config of adapter if some config is being provided by the user.\n\n      if (params !== null && params !== void 0 && (_params$modalConfig = params.modalConfig) !== null && _params$modalConfig !== void 0 && _params$modalConfig[adapterName]) {\n        adapterConfig = _objectSpread(_objectSpread({}, adapterConfig), params.modalConfig[adapterName]);\n      }\n\n      this.modalConfig.adapters[adapterName] = adapterConfig; // check if adapter is configured/added by user and exist in walletAdapters map.\n\n      const adapter = this.walletAdapters[adapterName];\n      log.debug(\"adapter config\", adapterName, (_this$modalConfig$ada2 = this.modalConfig.adapters) === null || _this$modalConfig$ada2 === void 0 ? void 0 : _this$modalConfig$ada2[adapterName].showOnModal, adapter); // if adapter is not custom configured then check if it is available in default adapters.\n      // and if adapter is not hidden by user\n\n      if (!adapter && (_this$modalConfig$ada3 = this.modalConfig.adapters) !== null && _this$modalConfig$ada3 !== void 0 && _this$modalConfig$ada3[adapterName].showOnModal) {\n        // if adapter is not configured and some default configuration is available, use it.\n        const ad = await getDefaultAdapterModule({\n          name: adapterName,\n          customChainConfig: this.options.chainConfig,\n          clientId: this.options.clientId\n        });\n        this.walletAdapters[adapterName] = ad;\n        return adapterName;\n      } else if ((adapter === null || adapter === void 0 ? void 0 : adapter.type) === ADAPTER_CATEGORY.IN_APP || (adapter === null || adapter === void 0 ? void 0 : adapter.type) === ADAPTER_CATEGORY.EXTERNAL || adapterName === this.cachedAdapter) {\n        var _this$modalConfig$ada4;\n\n        if (!((_this$modalConfig$ada4 = this.modalConfig.adapters) !== null && _this$modalConfig$ada4 !== void 0 && _this$modalConfig$ada4[adapterName].showOnModal)) return; // add client id to openlogin adapter, same web3auth client id can be used in openlogin.\n        // this id is being overridden if user is also passing client id in openlogin's adapter constructor.\n\n        if (adapterName === WALLET_ADAPTERS.OPENLOGIN) {\n          this.walletAdapters[adapterName].setAdapterSettings({\n            clientId: this.options.clientId\n          });\n        } // if adapter doesn't have any chainConfig then we will set the chainConfig based of passed chainNamespace\n        // and chainNamespace.\n\n\n        if (!adapter.chainConfigProxy) {\n          var _this$coreOptions$cha;\n\n          const chainConfig = _objectSpread(_objectSpread({}, getChainConfig(providedChainConfig.chainNamespace, (_this$coreOptions$cha = this.coreOptions.chainConfig) === null || _this$coreOptions$cha === void 0 ? void 0 : _this$coreOptions$cha.chainId)), this.coreOptions.chainConfig);\n\n          this.walletAdapters[adapterName].setChainConfig(chainConfig);\n        }\n\n        return adapterName;\n      }\n    });\n    const adapterNames = await Promise.all(adapterConfigurationPromises);\n    const hasInAppWallets = Object.values(this.walletAdapters).some(adapter => {\n      var _this$modalConfig$ada5;\n\n      if (adapter.type !== ADAPTER_CATEGORY.IN_APP) return false;\n      if (this.modalConfig.adapters[adapter.name].showOnModal !== true) return false;\n      if (!this.modalConfig.adapters[adapter.name].loginMethods) return true;\n      const mergedLoginMethods = getAdapterSocialLogins(adapter.name, this.walletAdapters[adapter.name], (_this$modalConfig$ada5 = this.modalConfig.adapters[adapter.name]) === null || _this$modalConfig$ada5 === void 0 ? void 0 : _this$modalConfig$ada5.loginMethods);\n      if (Object.values(mergedLoginMethods).some(method => method.showOnModal)) return true;\n      return false;\n    });\n    log.debug(hasInAppWallets, this.walletAdapters, \"hasInAppWallets\"); // Now, initialize the adapters.\n\n    const initPromises = adapterNames.map(async adapterName => {\n      if (!adapterName) return;\n\n      try {\n        const adapter = this.walletAdapters[adapterName]; // only initialize a external adapter here if it is a cached adapter.\n\n        if (this.cachedAdapter !== adapterName && adapter.type === ADAPTER_CATEGORY.EXTERNAL) {\n          return;\n        } // in-app wallets or cached wallet (being connected or already connected) are initialized first.\n        // if adapter is configured thn only initialize in app or cached adapter.\n        // external wallets are initialized on INIT_EXTERNAL_WALLET event.\n\n\n        this.subscribeToAdapterEvents(adapter);\n        if (adapter.status === ADAPTER_STATUS.NOT_READY) await adapter.init({\n          autoConnect: this.cachedAdapter === adapterName\n        }); // note: not adding cachedWallet to modal if it is external wallet.\n        // adding it later if no in-app wallets are available.\n\n        if (adapter.type === ADAPTER_CATEGORY.IN_APP) {\n          this.initializeInAppWallet(adapterName);\n        }\n      } catch (error) {\n        log.error(error, \"error while initializing adapter\");\n      }\n    });\n    this.status = ADAPTER_STATUS.READY;\n    await Promise.all(initPromises);\n    const hasExternalWallets = allAdapters.some(adapterName => {\n      var _this$walletAdapters$, _this$modalConfig$ada6;\n\n      return ((_this$walletAdapters$ = this.walletAdapters[adapterName]) === null || _this$walletAdapters$ === void 0 ? void 0 : _this$walletAdapters$.type) === ADAPTER_CATEGORY.EXTERNAL && ((_this$modalConfig$ada6 = this.modalConfig.adapters) === null || _this$modalConfig$ada6 === void 0 ? void 0 : _this$modalConfig$ada6[adapterName].showOnModal);\n    });\n\n    if (hasExternalWallets) {\n      this.loginModal.initExternalWalletContainer();\n    } // variable to check if we have any in app wallets\n    // currently all default in app and external wallets can be hidden or shown based on config.\n\n\n    if (!hasInAppWallets && hasExternalWallets) {\n      // if no in app wallet is available then initialize external wallets in modal\n      await this.initExternalWalletAdapters(false, {\n        showExternalWalletsOnly: true\n      });\n    }\n  }\n\n  async connect() {\n    // if (!this.loginModal.initialized) throw new Error(\"Login modal is not initialized\");\n    // if already connected return provider\n    if (this.provider) return this.provider;\n    this.loginModal.open();\n    return new Promise((resolve, reject) => {\n      this.once(ADAPTER_EVENTS.CONNECTED, () => {\n        return resolve(this.provider);\n      });\n      this.once(ADAPTER_EVENTS.ERRORED, err => {\n        return reject(err);\n      });\n    });\n  }\n\n  async initExternalWalletAdapters(externalWalletsInitialized, options) {\n    if (externalWalletsInitialized) return;\n    const adaptersConfig = {};\n    const adaptersData = {};\n    const adapterPromises = Object.keys(this.walletAdapters).map(async adapterName => {\n      try {\n        const adapter = this.walletAdapters[adapterName];\n\n        if ((adapter === null || adapter === void 0 ? void 0 : adapter.type) === ADAPTER_CATEGORY.EXTERNAL) {\n          log.debug(\"init external wallet\", this.cachedAdapter, adapterName);\n          this.subscribeToAdapterEvents(adapter); // we are not initializing cached adapter here as it is already being initialized in initModal before.\n\n          if (this.cachedAdapter === adapterName) {\n            return;\n          }\n\n          if (adapter.status === ADAPTER_STATUS.NOT_READY) await adapter.init({\n            autoConnect: this.cachedAdapter === adapterName\n          });\n          adaptersConfig[adapterName] = this.modalConfig.adapters[adapterName];\n          adaptersData[adapterName] = adapter.adapterData || {};\n          return adapterName;\n        }\n      } catch (error) {\n        log.error(error, \"error while initializing adapter\");\n      }\n    });\n    const adapterInitResults = await Promise.all(adapterPromises);\n    const finalAdaptersConfig = {};\n    adapterInitResults.forEach(result => {\n      if (result) {\n        finalAdaptersConfig[result] = adaptersConfig[result];\n      }\n    });\n    this.loginModal.addWalletLogins(finalAdaptersConfig, {\n      showExternalWalletsOnly: !!(options !== null && options !== void 0 && options.showExternalWalletsOnly)\n    });\n  }\n\n  initializeInAppWallet(adapterName) {\n    log.info(\"adapterInitResults\", adapterName);\n\n    if (this.walletAdapters[adapterName].type === ADAPTER_CATEGORY.IN_APP) {\n      var _this$modalConfig$ada7, _this$options$uiConfi3;\n\n      this.loginModal.addSocialLogins(adapterName, getAdapterSocialLogins(adapterName, this.walletAdapters[adapterName], (_this$modalConfig$ada7 = this.modalConfig.adapters[adapterName]) === null || _this$modalConfig$ada7 === void 0 ? void 0 : _this$modalConfig$ada7.loginMethods), ((_this$options$uiConfi3 = this.options.uiConfig) === null || _this$options$uiConfi3 === void 0 ? void 0 : _this$options$uiConfi3.loginMethodsOrder) || OPENLOGIN_PROVIDERS);\n    }\n  }\n\n  subscribeToLoginModalEvents() {\n    this.loginModal.on(LOGIN_MODAL_EVENTS.LOGIN, async params => {\n      try {\n        await this.connectTo(params.adapter, params.loginParams);\n      } catch (error) {\n        log.error(\"Error while connecting to adapter: \".concat(params.adapter), error);\n      }\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.INIT_EXTERNAL_WALLETS, async params => {\n      await this.initExternalWalletAdapters(params.externalWalletsInitialized);\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.DISCONNECT, async () => {\n      try {\n        await this.logout();\n      } catch (error) {\n        log.error(\"Error while disconnecting\", error);\n      }\n    });\n    this.loginModal.on(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, async visibility => {\n      var _this$walletAdapters$2;\n\n      log.debug(\"is login modal visible\", visibility);\n      this.emit(LOGIN_MODAL_EVENTS.MODAL_VISIBILITY, visibility);\n      const walletConnectStatus = (_this$walletAdapters$2 = this.walletAdapters[WALLET_ADAPTERS.WALLET_CONNECT_V1]) === null || _this$walletAdapters$2 === void 0 ? void 0 : _this$walletAdapters$2.status;\n\n      if (visibility && walletConnectStatus === ADAPTER_STATUS.READY) {\n        // refreshing session for wallet connect whenever modal is opened.\n        try {\n          this.walletAdapters[WALLET_ADAPTERS.WALLET_CONNECT_V1].connect();\n        } catch (error) {\n          log.error(\"Error while disconnecting to wallet connect in core\", error);\n        }\n      }\n    });\n  }\n\n}\n\nexport { Web3Auth, defaultEvmDappModalConfig, defaultEvmWalletModalConfig, defaultSolanaDappModalConfig, defaultSolanaWalletModalConfig };","map":{"version":3,"mappings":";;;;AAIO,MAAMA,4BAA4B,GAAwB;AAC/DC,gBAAc,EAAEC,gBAAgB,CAACC,MAD8B;AAE/DC,UAAQ,EAAE;AACPC,oBAAe,CAACC,YAAhBD,GAA+B;AAC9BE,WAAK,EAAE,qBADuB;AAE9BC,iBAAW,EAAE,IAFiB;AAG9BC,kBAAY,EAAE,IAHgB;AAI9BC,mBAAa,EAAE;AAJe,KADxB;AAOPL,oBAAe,CAACM,SAAhBN,GAA4B;AAC3BE,WAAK,EAAE,WADoB;AAE3BC,iBAAW,EAAE,IAFc;AAG3BC,kBAAY,EAAE,IAHa;AAI3BC,mBAAa,EAAE;AAJY,KAPrB;AAaPL,oBAAe,CAACO,OAAhBP,GAA0B;AACzBE,WAAK,EAAE,SADkB;AAEzBC,iBAAW,EAAE,IAFY;AAGzBC,kBAAY,EAAE,IAHW;AAIzBC,mBAAa,EAAE;AAJU;AAbnB;AAFqD,CAA1D;AAwBA,MAAMG,yBAAyB,GAAwB;AAC5DZ,gBAAc,EAAEC,gBAAgB,CAACY,MAD2B;AAE5DV,UAAQ,EAAE;AACPW,iBAAY,CAACC,SAAbD,GAAyB;AACxBR,WAAK,EAAE,cADiB;AAExBC,iBAAW,EAAE,IAFW;AAGxBC,kBAAY,EAAE,IAHU;AAIxBC,mBAAa,EAAE;AAJS,KADlB;AAOPK,iBAAY,CAACE,QAAbF,GAAwB;AACvBR,WAAK,EAAE,UADgB;AAEvBC,iBAAW,EAAE,IAFU;AAGvBC,kBAAY,EAAE,IAHS;AAIvBC,mBAAa,EAAE;AAJQ,KAPjB;AAaPK,iBAAY,CAACJ,SAAbI,GAAyB;AACxBR,WAAK,EAAE,WADiB;AAExBC,iBAAW,EAAE,IAFW;AAGxBC,kBAAY,EAAE,IAHU;AAIxBC,mBAAa,EAAE;AAJS,KAblB;AAmBPK,iBAAY,CAACG,iBAAbH,GAAiC;AAChCR,WAAK,EAAE,gBADyB;AAEhCC,iBAAW,EAAE,IAFmB;AAGhCC,kBAAY,EAAE,IAHkB;AAIhCC,mBAAa,EAAE;AAJiB;AAnB1B;AAFkD,CAAvD;AA8BA,MAAMS,8BAA8B,GAAwB;AACjElB,gBAAc,EAAEC,gBAAgB,CAACC,MADgC;AAEjEC,UAAQ,EAAE;AACPC,oBAAe,CAACM,SAAhBN,GAA4B;AAC3BE,WAAK,EAAE,WADoB;AAE3BC,iBAAW,EAAE,IAFc;AAG3BC,kBAAY,EAAE,IAHa;AAI3BC,mBAAa,EAAE;AAJY;AADrB;AAFuD,CAA5D;AAYA,MAAMU,2BAA2B,GAAwB;AAC9DnB,gBAAc,EAAEC,gBAAgB,CAACY,MAD6B;AAE9DV,UAAQ,EAAE;AACPW,iBAAY,CAACJ,SAAbI,GAAyB;AACxBR,WAAK,EAAE,WADiB;AAExBC,iBAAW,EAAE,IAFW;AAGxBC,kBAAY,EAAE,IAHU;AAIxBC,mBAAa,EAAE;AAJS;AADlB;AAFoD,CAAzD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnEA,MAAMW,uBAAuB,GAAG,MAAOC,MAAP,IAIN;AACzB;AAAEC,QAAF;AAAQC,qBAAR;AAA2BC;AAA3B,MAAwCH,MAAxC;AACF,OAACI,MAAM,CAACC,MAAPD,CAAcxB,gBAAdwB,EAAgCE,QAAhCF,CAAyCF,iBAAiB,CAACvB,cAA3DyB,CAAD,EACF,MAAM,IAAIG,KAAJ,CAAqCL,mDAAiB,CAACvB,cAAlBuB,CAArC,CAAN;;AACIM,wBAAgB,uCAChBC,cAAc,CAACP,iBAAiB,CAACvB,cAAnB,EAAmCuB,iBAAnC,SAAmCA,qBAAnC,KAAmCA,mCAAiB,CAAEQ,OAAtD,CADE,GAEhBR,iBAAiB,IAAI,EAFL,CAAhBM;;AAIN,MAAIP,IAAI,KAAKU,eAAe,CAACjB,SAA7B,EAAwC;AAChC;AAAEkB;AAAF,QAAyB,MAAM,OAAO,6BAAP,CAA/B;AACN,UAAMC,OAAO,GAAG,IAAID,kBAAJ,CAAuB;AAAEE,iBAAW,EAAEN;AAAf,KAAvB,CAAhB;AACA,WAAOK,OAAP;AAHF,SAIO,IAAIZ,IAAI,KAAKU,eAAe,CAAC3B,YAA7B,EAA2C;AAC1C;AAAE+B;AAAF,QAA0B,MAAM,OAAO,gCAAP,CAAhC;AACN,UAAMF,OAAO,GAAG,IAAIE,mBAAJ,CAAwB;AAAED,iBAAW,EAAEN;AAAf,KAAxB,CAAhB;AACA,WAAOK,OAAP;AAHK,SAIA,IAAIZ,IAAI,KAAKU,eAAe,CAAChB,QAA7B,EAAuC;AACtC;AAAEqB;AAAF,QAAsB,MAAM,OAAO,4BAAP,CAA5B;AACN,UAAMH,OAAO,GAAG,IAAIG,eAAJ,CAAoB;AAAEF,iBAAW,EAAEN;AAAf,KAApB,CAAhB;AACA,WAAOK,OAAP;AAHK,SAIA,IAAIZ,IAAI,KAAKU,eAAe,CAACrB,OAA7B,EAAsC;AACrC;AAAE2B;AAAF,QAAqB,MAAM,OAAO,2BAAP,CAA3B;AACN,UAAMJ,OAAO,GAAG,IAAII,cAAJ,CAAmB;AAAEH,iBAAW,EAAEN;AAAf,KAAnB,CAAhB;AACA,WAAOK,OAAP;AAHK,SAIA,IAAIZ,IAAI,KAAKU,eAAe,CAACf,iBAA7B,EAAgD;AAC/C;AAAEsB;AAAF,QAA6B,MAAM,OAAO,qCAAP,CAAnC;AACN,UAAML,OAAO,GAAG,IAAIK,sBAAJ,CAA2B;AAAEJ,iBAAW,EAAEN;AAAf,KAA3B,CAAhB;AACA,WAAOK,OAAP;AAHK,SAIA,IAAIZ,IAAI,KAAKU,eAAe,CAACtB,SAA7B,EAAwC;AACvC;AAAE8B,sBAAF;AAAoBC;AAApB,QAAmD,MAAM,OAAO,6BAAP,CAAzD;AACN,UAAMC,cAAc,GAAGD,0BAA0B,CAAClB,iBAAiB,CAACvB,cAAnB,EAAmCuB,iBAAnC,SAAmCA,qBAAnC,WAAmCA,GAAnC,MAAmCA,oBAAiB,CAAEQ,OAAtD,CAAjD;AACA,UAAMG,OAAO,GAAG,IAAIM,gBAAJ,qCACXE,cADW;AAEdP,iBAAW,sCAAQO,cAAc,CAACP,WAAfO,IAA8B,EAAtC,GAA8Cb,gBAA9C,CAFG;AAGdc,qBAAe,sCAAQD,cAAc,CAACC,eAAvB;AAA6DnB;AAA7D;AAHD,OAAhB;AAKA,WAAOU,OAAP;AACD;;AACD,QAAM,IAAIN,KAAJ,CAAU,6BAAV,CAAN;AA1CK;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACkED,MAAOgB,QAAP,SAAwBC,YAAxB,CAAoC;AAOxCC,cAAYC,OAAZ,EAAoC;AAAA;;AAClC,UAAMA,OAAN;;AADkCC;;AAAAA;;AAAAA,yCAFOpC,yBAEP;;AAE7BmC,mBAALE,kBAAoBF,OAApB,CAAKA;AACL,UAAMG,mBAAmB,GAAG,KAAKH,OAAL,CAAaZ,WAAzC;;AACA,QAAIe,mBAAmB,CAAClD,cAApBkD,KAAuCjD,gBAAgB,CAACC,MAA5D,EAAoE;AAClE,UAAI6C,OAAO,CAACI,QAARJ,KAAqB,QAAzB,EAAmC;AACjC;AACKK,2BAAclC,8BAAdkC;AAFP,aAGO;AACL;AACKA,2BAAcrD,4BAAdqD;AACN;AAPH,WAQO,IAAIF,mBAAmB,CAAClD,cAApBkD,KAAuCjD,gBAAgB,CAACY,MAA5D,EAAoE;AACzE,UAAIkC,OAAO,CAACI,QAARJ,KAAqB,QAAzB,EAAmC;AACjC;AACKK,2BAAcjC,2BAAdiC;AAFP,aAGO;AACL;AACKA,2BAAcxC,yBAAdwC;AACN;AAPI,WAQA;AACL,YAAM,IAAIxB,KAAJ,4CAA8CsB,mBAAmB,CAAClD,cAAlE,EAAN;AACD;;AACD,SAAKqD,UAAL,GAAkB,IAAIC,UAAJ,CAAe;AAC/BC,WAAK,2BAAE,KAAKR,OAAL,CAAaS,QAAf,0DAAEC,sBAAuBF,KADC;AAE/BG,aAAO,EAAE,CAAKX,uCAAQS,QAART,MAAL,IAAKA,IAALY,iCAAKZ,GAAL,MAAKA,GAALY,uBAAuBD,OAAvB,KAAkC,EAFZ;AAG/BE,aAAO,EAAE,EAHsB;AAI/BC,qBAAe,EAAE,IAJc;AAK/BC,0BAAoB,EAAE,KAAKf,OAAL,CAAae;AALJ,KAAf,CAAlB;AAOA,SAAKC,2BAAL;AACD;;AAEqB,QAATC,SAAS,CAAC3C,MAAD,EAAoE;AACxF,UAAM4C,qBAAN;AACA,UAAM,KAAKZ,UAAL,CAAgBW,SAAhB,EAAN;AACA,UAAMd,mBAAmB,GAAG,KAAKH,OAAL,CAAaZ,WAAzC,CAHwF;;AAMxF,UAAM+B,WAAW,GAAG,CAAC,GAAG,IAAIC,GAAJ,CAAQ,CAAC,GAAG1C,MAAM,CAAC2C,IAAP3C,CAAY,KAAK2B,WAAL,CAAiBjD,QAAjB,IAA6B,EAAzCsB,CAAJ,EAAkD,GAAGA,MAAM,CAAC2C,IAAP3C,CAAY,KAAK4C,cAAjB5C,CAArD,CAAR,CAAJ,CAApB;AAEM6C,sCAA4B,GAAGJ,WAAW,CAACK,GAAZL,CAAgB,MAAOM,WAAP,IAAsB;AAAA,sGACzE;;;AACIC,uBAAa,GAAG,CAAKrB,0CAAYjD,QAAZiD,MAAL,IAAKA,IAALsB,gCAAKtB,GAAL,MAAKA,GAALsB,sBAA4BF,WAA5B,MAA4C;AAC9DlE,aAAK,EAAEkE,WADuD;AAE9DjE,mBAAW,EAAE,IAFiD;AAG9DC,oBAAY,EAAE,IAHgD;AAI9DC,qBAAa,EAAE;AAJ+C,OAA5DgE,CAFqE;;AAUrEpD,gBAAJ,KAAIA,cAAJ,KAAIA,uCAAM,CAAE+B,WAAR/B,oEAAsBmD,WAAtB,GAAoC;AACtCC,qBAAa,GAAQA,gDAAkBpD,MAAM,CAAC+B,WAAP/B,CAAmBmD,WAAnBnD,CAAlBoD,CAArBA;AACD;;AACKrB,uBAAYjD,QAAZiD,CAAkEoB,WAAlEpB,IAAiFqB,aAAjFrB,CAbmE;;AAgBzE,YAAMlB,OAAO,GAAG,KAAKmC,cAAL,CAAoBG,WAApB,CAAhB;AACAG,SAAG,CAACC,KAAJD,CAAU,gBAAVA,EAA4BH,WAA5BG,4BAAyC,KAAKvB,WAAL,CAAiBjD,QAA1D,2DAAyC0E,uBAA4BL,WAA5B,EAAyCjE,WAAlFoE,EAA+FzC,OAA/FyC,EAjByE;AAoBzE;;AACA,UAAI,CAACzC,OAAD,IAAY,+BAAKkB,WAAL,CAAiBjD,QAAjB,MAAZ,6CAAY2E,sBAA4BN,aAA5B,CAAyCjE,WAAzD,EAAsE;AACpE;AACA,cAAMwE,EAAE,GAAG,MAAM3D,uBAAuB,CAAC;AACvCE,cAAI,EAAEkD,WADiC;AAEvCjD,2BAAiB,EAAE,KAAKwB,OAAL,CAAaZ,WAFO;AAGvCX,kBAAQ,EAAE,KAAKuB,OAAL,CAAavB;AAHgB,SAAD,CAAxC;AAMA,aAAK6C,cAAL,CAAoBG,WAApB,IAAmCO,EAAnC;AAEA,eAAOP,WAAP;AAVF,aAWO,IAAI,QAAO,SAAPtC,WAAO,WAAPA,mBAAO,CAAE8C,IAAT,MAAkBC,gBAAgB,CAACC,MAAnC,IAA6C,QAAO,SAAPhD,WAAO,WAAPA,mBAAO,CAAE8C,IAAT,MAAkBC,gBAAgB,CAACE,QAAhF,IAA4FX,WAAW,KAAK,KAAKY,aAArH,EAAoI;AAAA;;AACzI,YAAI,EAAC,+BAAKhC,WAAL,CAAiBjD,QAAjB,MAAD,IAAC,IAADkF,iCAAC,0BAA4Bb,aAA5B,CAAyCjE,WAA1C,CAAJ,EAA2D,OAD8E;AAGzI;;AACA,YAAIiE,WAAW,KAAKxC,eAAe,CAACtB,SAApC,EAA+C;AAC7C,eAAK2D,cAAL,CAAoBG,WAApB,EAAiCc,kBAAjC,CAAoD;AAAE9D,oBAAQ,EAAE,KAAKuB,OAAL,CAAavB;AAAzB,WAApD;AALuI;AASzI;;;AACA,YAAI,CAACU,OAAO,CAACqD,gBAAb,EAA+B;AAAA;;AACvBpD,2BAAW,mCACZL,cAAc,CAACoB,mBAAmB,CAAClD,cAArB,2BAAqC,KAAKwF,WAAL,CAAiBrD,WAAtD,0DAAqCsD,sBAA8B1D,OAAnE,CADF,GAEZ,KAAKyD,WAAL,CAAiBrD,WAFL,CAAXA;;AAIN,eAAKkC,cAAL,CAAoBG,WAApB,EAAiCkB,cAAjC,CAAgDvD,WAAhD;AACD;;AAED,eAAOqC,WAAP;AACD;AAnDkC,MAA/BF;AAsDAqB,sBAAY,GAAG,MAAMC,OAAO,CAACC,GAARD,CAAYtB,4BAAZsB,CAArBD;AACN,UAAMG,eAAe,GAAGrE,MAAM,CAACC,MAAPD,CAAc,KAAK4C,cAAnB5C,EAAmCsE,IAAnCtE,CAAyCS,OAAD,IAAY;AAAA;;AACtEA,iBAAO,CAAC8C,IAAR9C,KAAiB+C,gBAAgB,CAACC,MAAlChD,EAA0C,OAAO,KAAP;AAC9C,UAAI,KAAKkB,WAAL,CAAiBjD,QAAjB,CAA0B+B,OAAO,CAACZ,IAAlC,EAAwCf,WAAxC,KAAwD,IAA5D,EAAkE,OAAO,KAAP;AAClE,UAAI,CAAC,KAAK6C,WAAL,CAAiBjD,QAAjB,CAA0B+B,OAAO,CAACZ,IAAlC,EAAwC0E,YAA7C,EAA2D,OAAO,IAAP;AAC3D,YAAMC,kBAAkB,GAAGC,sBAAsB,CAC/ChE,OAAO,CAACZ,IADuC,EAE/C,KAAK+C,cAAL,CAAoBnC,OAAO,CAACZ,IAA5B,CAF+C,4BAG9C,KAAK8B,WAAL,CAAiBjD,QAAjB,CAAuE+B,OAAO,CAACZ,IAA/E,CAH8C,2DAG9C6E,sBAAsFH,aAHxC,CAAjD;AAKA,UAAIvE,MAAM,CAACC,MAAPD,CAAcwE,kBAAdxE,EAAkCsE,IAAlCtE,CAAwC2E,MAAD,IAAYA,MAAM,CAAC7F,WAA1DkB,CAAJ,EAA4E,OAAO,IAAP;AAC5E,aAAO,KAAP;AAVsB,MAAxB;AAYAkD,OAAG,CAACC,KAAJD,CAAUmB,eAAVnB,EAA2B,KAAKN,cAAhCM,EAAgD,iBAAhDA,EA3EwF;;AA6ElF0B,sBAAY,GAAGV,YAAY,CAACpB,GAAboB,CAAiB,MAAOnB,WAAP,IAAsB;AACtD,WAACA,WAAD,EAAc;;AACd;AACItC,qBAAO,GAAG,KAAKmC,cAAL,CAAoBG,WAApB,CAAVtC,CADJ;;AAGF,YAAI,KAAKkD,aAAL,KAAuBZ,WAAvB,IAAsCtC,OAAO,CAAC8C,IAAR9C,KAAiB+C,gBAAgB,CAACE,QAA5E,EAAsF;AACpF;AAJA;AAOF;AACA;;;AACKmB,sCAAyBpE,OAAzBoE;AACL,YAAIpE,OAAO,CAACqE,MAARrE,KAAmBsE,cAAc,CAACC,SAAtC,EAAiD,MAAMvE,OAAO,CAACwE,IAARxE,CAAa;AAAEyE,qBAAW,EAAE,KAAKvB,aAAL,KAAuBZ;AAAtC,SAAbtC,CAAN,CAV/C;AAYF;;AACA,YAAIA,OAAO,CAAC8C,IAAR9C,KAAiB+C,gBAAgB,CAACC,MAAtC,EAA8C;AACvC0B,qCAAsBpC,WAAtBoC;AACN;AAfH,OAAI,CAgBF,OAAOC,KAAP,EAAc;AACdlC,WAAG,CAACkC,KAAJlC,CAAUkC,KAAVlC,EAAiB,kCAAjBA;AACD;AApBkB,MAAf0B;AAuBN,SAAKE,MAAL,GAAcC,cAAc,CAACM,KAA7B;AACA,UAAMlB,OAAO,CAACC,GAARD,CAAYS,YAAZT,CAAN;AAEA,UAAMmB,kBAAkB,GAAG7C,WAAW,CAAC6B,IAAZ7B,CAAkBM,WAAD,IAAgB;AAAA;;AACnD,4CAAKH,cAAL,CAAoBG,WAApB,iFAAkCQ,IAAlC,MAA2CC,gBAAgB,CAACE,QAA5D,+BAAwE,KAAK/B,WAAL,CAAiBjD,QAAzF,2DAAwE6G,uBAA4BxC,WAA5B,EAAyCjE,WAAjH;AADkB,MAA3B;;AAIA,QAAIwG,kBAAJ,EAAwB;AACjB1D,sBAAW4D,2BAAX5D;AA5GiF;AAgHxF;;;AACA,QAAI,CAACyC,eAAD,IAAoBiB,kBAAxB,EAA4C;AAC1C;AACA,YAAM,KAAKG,0BAAL,CAAgC,KAAhC,EAAuC;AAAEC,+BAAuB,EAAE;AAA3B,OAAvC,CAAN;AACD;AACF;;AAEmB,QAAPC,OAAO;AAClB;AACA;AACA,QAAI,KAAKC,QAAT,EAAmB,OAAO,KAAKA,QAAZ;AACdhE,oBAAWiE,IAAXjE;AACL,WAAO,IAAIuC,OAAJ,CAAY,CAAC2B,OAAD,EAAUC,MAAV,KAAoB;AACrC,WAAKC,IAAL,CAAUC,cAAc,CAACC,SAAzB,EAAoC,MAAK;AACvC,eAAOJ,OAAO,CAAC,KAAKF,QAAN,CAAd;AADF;AAGA,WAAKI,IAAL,CAAUC,cAAc,CAACE,OAAzB,EAAmCC,GAAD,IAAiB;AAC1CL,qBAAM,CAACK,GAAD,CAANL;AADT;AAJK,MAAP;AAQD;;AAEuC,QAA1BN,0BAA0B,CAACY,0BAAD,EAAsC/E,OAAtC,EAAoF;AAC1H,QAAI+E,0BAAJ,EAAgC;AAC1BC,wBAAc,GAAsC,EAApDA;AACAC,sBAAY,GAA4B,EAAxCA;AACN,UAAMC,eAAe,GAAGxG,MAAM,CAAC2C,IAAP3C,CAAY,KAAK4C,cAAjB5C,EAAiC8C,GAAjC9C,CAAqC,MAAO+C,WAAP,IAAsB;AAC7E;AACF,cAAMtC,OAAO,GAAG,KAAKmC,cAAL,CAAoBG,WAApB,CAAhB;;AACA,YAAI,QAAO,KAAP,eAAO,KAAP,yBAAO,CAAEQ,IAAT,MAAkBC,gBAAgB,CAACE,QAAvC,EAAiD;AAC/CR,aAAG,CAACC,KAAJD,CAAU,sBAAVA,EAAkC,KAAKS,aAAvCT,EAAsDH,WAAtDG;AACA,eAAK2B,wBAAL,CAA8BpE,OAA9B,EAF+C;;AAI/C,cAAI,KAAKkD,aAAL,KAAuBZ,WAA3B,EAAwC;AACtC;AACD;;AACD,cAAItC,OAAO,CAACqE,MAARrE,KAAmBsE,cAAc,CAACC,SAAtC,EAAiD,MAAMvE,OAAO,CAACwE,IAARxE,CAAa;AAAEyE,uBAAW,EAAE,KAAKvB,aAAL,KAAuBZ;AAAtC,WAAbtC,CAAN;AACjD6F,wBAAc,CAACvD,WAAD,CAAduD,GAA+B,KAAK3E,WAAL,CAAiBjD,QAAjB,CAAuEqE,WAAvE,CAA/BuD;AACAC,sBAAY,CAACxD,WAAD,CAAZwD,GAA4B9F,OAAO,CAACgG,WAARhG,IAAuB,EAAnD8F;AACA,iBAAOxD,WAAP;AACD;AAbH,OAAI,CAcF,OAAOqC,KAAP,EAAc;AACdlC,WAAG,CAACkC,KAAJlC,CAAUkC,KAAVlC,EAAiB,kCAAjBA;AACD;AAjBqB,MAAxB;AAoBMwD,4BAAkB,GAAG,MAAMvC,OAAO,CAACC,GAARD,CAAYqC,eAAZrC,CAA3BuC;AACAC,6BAAmB,GAAmD,EAAtEA;AACND,sBAAkB,CAACE,OAAnBF,CAA4BG,MAAD,IAA+B;AACxD,UAAIA,MAAJ,EAAY;AACVF,2BAAmB,CAACE,MAAD,CAAnBF,GAA8BL,cAAc,CAACO,MAAD,CAA5CF;AACD;AAHH;AAKA,SAAK/E,UAAL,CAAgBkF,eAAhB,CAAgCH,mBAAhC,EAAqD;AAAEjB,6BAAuB,EAAE,CAAC,EAACpE,OAAD,SAACA,WAAD,WAACA,WAAO,CAAEoE,uBAAV;AAA5B,KAArD;AACD;;AAEOP,uBAAqB,CAACpC,WAAD,EAAoB;AAC/CG,OAAG,CAAC6D,IAAJ7D,CAAS,oBAATA,EAA+BH,WAA/BG;;AACI,aAAKN,cAAL,CAAoBG,WAApB,EAAiCQ,IAAjC,KAA0CC,gBAAgB,CAACC,MAA3D,EAAmE;AAAA;;AACrE,WAAK7B,UAAL,CAAgBoF,eAAhB,CACEjE,WADF,EAEE0B,sBAAsB,CACpB1B,WADoB,EAEpB,KAAKH,cAAL,CAAoBG,WAApB,CAFoB,EAGnB,+BAAKpB,WAAL,CAAiBjD,QAAjB,CAAuEqE,WAAvE,OAHmB,IAGnB,IAHmBkE,iCAGnB,GAHmB,MAGnB,0BAAqF1C,YAHlE,CAFxB,EAOE,gCAAKjD,OAAL,CAAaS,QAAb,MAAuBmF,IAAvB,IAAuBA,iCAAvB,GAAuBA,MAAvB,GAAuBA,wCAAvB,KAA4CC,mBAP9C;AASD;AACF;;AAEO7E,6BAA2B;AAC5BV,oBAAWwF,EAAXxF,CAAcyF,kBAAkB,CAACC,KAAjC1F,EAAwC,MAAOhC,MAAP,IAAyE;AAChH;AACI,mBAAK2H,SAAL,CAAwB3H,MAAM,CAACa,OAA/B,EAAwCb,MAAM,CAAC4H,WAA/C;AADR,OAAI,CAEF,OAAOpC,KAAP,EAAc;AACdlC,WAAG,CAACkC,KAAJlC,8CAAgDtD,MAAM,CAACa,OAAvD,GAAkE2E,KAAlElC;AACD;AALH,KAAKtB;AAOAA,oBAAWwF,EAAXxF,CAAcyF,kBAAkB,CAACI,qBAAjC7F,EAAwD,MAAOhC,MAAP,IAA0D;AACrH,YAAM,KAAK6F,0BAAL,CAAgC7F,MAAM,CAACyG,0BAAvC,CAAN;AADF,KAAKzE;AAGAA,oBAAWwF,EAAXxF,CAAcyF,kBAAkB,CAACK,UAAjC9F,EAA6C,YAAW;AACvD;AACI,mBAAK+F,MAAL;AADR,OAAI,CAEF,OAAOvC,KAAP,EAAc;AACdlC,WAAG,CAACkC,KAAJlC,8BAAuCkC,KAAvClC;AACD;AALH,KAAKtB;AAOAA,oBAAWwF,EAAXxF,CAAcyF,kBAAkB,CAACO,gBAAjChG,EAAmD,MAAOiG,UAAP,IAA8B;AAAA;;AACpF3E,SAAG,CAACC,KAAJD,CAAU,wBAAVA,EAAoC2E,UAApC3E;AACA,WAAK4E,IAAL,CAAUT,kBAAkB,CAACO,gBAA7B,EAA+CC,UAA/C;AACME,+BAAmB,GAAG,+BAAKnF,cAAL,CAAoBrC,eAAe,CAACf,iBAApC,mFAAwDsF,MAA9EiD;;AACN,UAAIF,UAAU,IAAIE,mBAAmB,KAAKhD,cAAc,CAACM,KAAzD,EAAgE;AAC9D;AACI;AACF,eAAKzC,cAAL,CAAoBrC,eAAe,CAACf,iBAApC,EAAuDmG,OAAvD;AADF,SAAI,CAEF,OAAOP,KAAP,EAAc;AACdlC,aAAG,CAACkC,KAAJlC,wDAAiEkC,KAAjElC;AACD;AACF;AAXH,KAAKtB;AAaN;;AA9PuC","names":["defaultSolanaDappModalConfig","chainNamespace","CHAIN_NAMESPACES","SOLANA","adapters","SOLANA_ADAPTERS","TORUS_SOLANA","label","showOnModal","showOnMobile","showOnDesktop","OPENLOGIN","PHANTOM","defaultEvmDappModalConfig","EIP155","EVM_ADAPTERS","TORUS_EVM","METAMASK","WALLET_CONNECT_V1","defaultSolanaWalletModalConfig","defaultEvmWalletModalConfig","getDefaultAdapterModule","params","name","customChainConfig","clientId","Object","values","includes","Error","finalChainConfig","getChainConfig","chainId","WALLET_ADAPTERS","TorusWalletAdapter","adapter","chainConfig","SolanaWalletAdapter","MetamaskAdapter","PhantomAdapter","WalletConnectV1Adapter","OpenloginAdapter","getOpenloginDefaultOptions","defaultOptions","adapterSettings","Web3Auth","Web3AuthCore","constructor","options","_defineProperty","_objectSpread","providedChainConfig","authMode","modalConfig","loginModal","LoginModal","theme","uiConfig","_this$options$uiConfi","appLogo","_this$options$uiConfi2","version","adapterListener","displayErrorsOnModal","subscribeToLoginModalEvents","initModal","checkInitRequirements","allAdapters","Set","keys","walletAdapters","adapterConfigurationPromises","map","adapterName","adapterConfig","_this$modalConfig$ada","log","debug","_this$modalConfig$ada2","_this$modalConfig$ada3","ad","type","ADAPTER_CATEGORY","IN_APP","EXTERNAL","cachedAdapter","_this$modalConfig$ada4","setAdapterSettings","chainConfigProxy","coreOptions","_this$coreOptions$cha","setChainConfig","adapterNames","Promise","all","hasInAppWallets","some","loginMethods","mergedLoginMethods","getAdapterSocialLogins","_this$modalConfig$ada5","method","initPromises","subscribeToAdapterEvents","status","ADAPTER_STATUS","NOT_READY","init","autoConnect","initializeInAppWallet","error","READY","hasExternalWallets","_this$modalConfig$ada6","initExternalWalletContainer","initExternalWalletAdapters","showExternalWalletsOnly","connect","provider","open","resolve","reject","once","ADAPTER_EVENTS","CONNECTED","ERRORED","err","externalWalletsInitialized","adaptersConfig","adaptersData","adapterPromises","adapterData","adapterInitResults","finalAdaptersConfig","forEach","result","addWalletLogins","info","addSocialLogins","_this$modalConfig$ada7","loginMethodsOrder","OPENLOGIN_PROVIDERS","on","LOGIN_MODAL_EVENTS","LOGIN","connectTo","loginParams","INIT_EXTERNAL_WALLETS","DISCONNECT","logout","MODAL_VISIBILITY","visibility","emit","walletConnectStatus"],"sources":["../src/config.ts","../src/default.ts","../src/modalManager.ts"],"sourcesContent":[null,null,null]},"metadata":{},"sourceType":"module"}