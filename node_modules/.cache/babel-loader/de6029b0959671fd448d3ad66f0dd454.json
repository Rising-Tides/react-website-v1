{"ast":null,"code":"var _jsxFileName = \"/Users/scotteinsidler/Documents/GitHub/react-website-v1/src/components/HeroSection.js\";\nimport React from 'react';\nimport '../App.css';\nimport { Button } from './Button';\nimport './HeroSection.css';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport contract from '../contracts/NFTCollectible.json';\nconst contractAddress = \"0x836049Ddc0e177D2f52871b2d6e443dac0f2b659\";\nconst abi = contract.abi;\nconst [currentAccount, setCurrentAccount] = useState(null);\n\nconst checkWalletIsConnected = async () => {\n  const {\n    ethereum\n  } = window;\n\n  if (!ethereum) {\n    console.log(\"Make sure you have Metamask installed!\");\n    return;\n  } else {\n    console.log(\"Wallet exists! We're ready to go!\");\n  }\n\n  const accounts = await ethereum.request({\n    method: 'eth_accounts'\n  });\n\n  if (accounts.length != 0) {\n    const account = accounts[0];\n    console.log(\"Found an authorized account: \", account);\n    setCurrentAccount(account);\n  } else {\n    console.log(\"No authorized account found\");\n  }\n};\n\nconst connectWalletHandler = async () => {\n  const {\n    ethereum\n  } = window;\n\n  if (!ethereum) {\n    alert(\"Please install Metamask!\");\n  }\n\n  try {\n    const accounts = await ethereum.request({\n      method: 'eth_requestAccounts'\n    });\n    console.log(\"Found an account! Address: \", accounts[0]);\n    setCurrentAccount(accounts[0]);\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst mintNftHandler = async () => {\n  try {\n    const {\n      ethereum\n    } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const nftContract = new ethers.Contract(contractAddress, abi, signer);\n      console.log(\"Initialize payment\");\n      let nftTxn = await nftContract.mintNFTs(1, {\n        value: ethers.utils.parseEther(\"0.01\")\n      });\n      console.log(\"Mining... please wait\");\n      await nftTxn.wait();\n      console.log('Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}');\n    } else {\n      console.log(\"Ethereum object does not exist\");\n    }\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nconst connectWalletButton = () => {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: connectWalletHandler,\n    className: \"cta-button connect-wallet-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 5\n    }\n  }, \"Connect Wallet\");\n};\n\nconst mintNftButton = () => {\n  return /*#__PURE__*/React.createElement(\"button\", {\n    onClick: mintNftHandler,\n    className: \"cta-button mint-nft-button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 5\n    }\n  }, \"Mint NFT\");\n};\n\nuseEffect(() => {\n  checkWalletIsConnected();\n}, []);\n\nfunction HeroSection() {\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"video\", {\n    src: \"/videos/video-1.mp4\",\n    autoPlay: true,\n    loop: true,\n    muted: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }\n  }, \"ADVENTURE AWAITS\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }, \"What are you waiting for?\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero-btns\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    className: \"btns\",\n    buttonStyle: \"btn--outline\",\n    buttonSize: \"btn--large\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 9\n    }\n  }, \"GET STARTED\"), /*#__PURE__*/React.createElement(Button, {\n    className: \"btns\",\n    buttonStyle: \"btn--primary\",\n    buttonSize: \"btn--large\",\n    onClick: console.log('hey'),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }\n  }, \"WATCH TRAILER \", /*#__PURE__*/React.createElement(\"i\", {\n    className: \"far fa-play-circle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }))));\n}\n\nexport default HeroSection;","map":{"version":3,"sources":["/Users/scotteinsidler/Documents/GitHub/react-website-v1/src/components/HeroSection.js"],"names":["React","Button","useEffect","useState","ethers","contract","contractAddress","abi","currentAccount","setCurrentAccount","checkWalletIsConnected","ethereum","window","console","log","accounts","request","method","length","account","connectWalletHandler","alert","err","mintNftHandler","provider","providers","Web3Provider","signer","getSigner","nftContract","Contract","nftTxn","mintNFTs","value","utils","parseEther","wait","connectWalletButton","mintNftButton","HeroSection"],"mappings":"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","sourcesContent":["import React from 'react';\nimport '../App.css';\nimport { Button } from './Button';\nimport './HeroSection.css';\nimport { useEffect } from 'react';\nimport { useState } from 'react';\nimport { ethers } from 'ethers';\nimport contract from '../contracts/NFTCollectible.json';\n\nconst contractAddress = \"0x836049Ddc0e177D2f52871b2d6e443dac0f2b659\";\nconst abi = contract.abi;\nconst [currentAccount, setCurrentAccount] = useState(null);\n\nconst checkWalletIsConnected = async () => { \n  const { ethereum } = window;\n\n  if (!ethereum) {\n    console.log(\"Make sure you have Metamask installed!\");\n    return;\n  } else {\n    console.log(\"Wallet exists! We're ready to go!\")\n  }\n  const accounts = await ethereum.request({ method: 'eth_accounts' });\n\n  if (accounts.length != 0) {\n    const account = accounts[0];\n    console.log(\"Found an authorized account: \", account);\n    setCurrentAccount(account); \n  } else {\n    console.log(\"No authorized account found\");\n  }\n}\n\nconst connectWalletHandler = async () => { \n  const { ethereum } = window;\n\n  if (!ethereum) {\n    alert(\"Please install Metamask!\");\n  }\n\n  try {\n    const accounts = await ethereum.request({method: 'eth_requestAccounts' });\n    console.log(\"Found an account! Address: \", accounts[0]);\n    setCurrentAccount(accounts[0]);\n  } catch (err) {\n    console.log(err)\n  }\n}\n\nconst mintNftHandler = async () => { \n  try {\n    const { ethereum } = window;\n\n    if (ethereum) {\n      const provider = new ethers.providers.Web3Provider(ethereum);\n      const signer = provider.getSigner();\n      const nftContract = new ethers.Contract(contractAddress, abi, signer);\n\n      console.log(\"Initialize payment\");\n      let nftTxn = await nftContract.mintNFTs(1, { value: ethers.utils.parseEther(\"0.01\") });\n\n      console.log(\"Mining... please wait\");\n      await nftTxn.wait();\n\n      console.log('Mined, see transaction: https://rinkeby.etherscan.io/tx/${nftTxn.hash}');\n\n    } else {\n      console.log(\"Ethereum object does not exist\");\n    }\n\n  } catch (err) {\n    console.log(err);\n  }\n}\n\nconst connectWalletButton = () => {\n  return (\n    <button onClick={connectWalletHandler} className='cta-button connect-wallet-button'>\n      Connect Wallet\n    </button>\n  )\n}\n\nconst mintNftButton = () => {\n  return (\n    <button onClick={mintNftHandler} className='cta-button mint-nft-button'>\n      Mint NFT\n    </button>\n  )\n}\n\nuseEffect(() => {\n  checkWalletIsConnected();\n}, [])\n\nfunction HeroSection() {\n  return (\n    <div className='hero-container'>\n      <video src='/videos/video-1.mp4' autoPlay loop muted />\n      <h1>ADVENTURE AWAITS</h1>\n      <p>What are you waiting for?</p>\n      <div className='hero-btns'>\n        <Button\n          className='btns'\n          buttonStyle='btn--outline'\n          buttonSize='btn--large'\n        >\n          GET STARTED\n        </Button>\n        <Button\n          className='btns'\n          buttonStyle='btn--primary'\n          buttonSize='btn--large'\n          onClick={console.log('hey')}\n        >\n          WATCH TRAILER <i className='far fa-play-circle' />\n        </Button>\n      </div>\n    </div>\n  );\n}\n\nexport default HeroSection;\n"]},"metadata":{},"sourceType":"module"}