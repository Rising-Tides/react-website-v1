{"ast":null,"code":"import _defineProperty from '@babel/runtime/helpers/defineProperty';\nimport { Transaction } from '@solana/web3.js';\nimport { createLoggerMiddleware, COMMUNICATION_JRPC_METHODS, COMMUNICATION_NOTIFICATIONS, PROVIDER_JRPC_METHODS, PROVIDER_NOTIFICATIONS } from '@toruslabs/base-controllers';\nimport { setAPIKey } from '@toruslabs/http-helpers';\nimport { SafeEventEmitter, ObjectMultiplex, createStreamMiddleware, JRPCEngine, createIdRemapMiddleware, getRpcPromiseCallback, BasePostMessageStream } from '@toruslabs/openlogin-jrpc';\nimport { ethErrors, EthereumRpcError } from 'eth-rpc-errors';\nimport { isDuplexStream } from 'is-stream';\nimport pump from 'pump';\nimport loglevel from 'loglevel';\nimport dequal from 'fast-deep-equal';\nvar messages = {\n  errors: {\n    disconnected: () => \"Torus: Lost connection to Torus.\",\n    permanentlyDisconnected: () => \"Torus: Disconnected from iframe. Page reload required.\",\n    unsupportedSync: method => \"Torus: The Torus Ethereum provider does not support synchronous methods like \".concat(method, \" without a callback parameter.\"),\n    invalidDuplexStream: () => \"Must provide a Node.js-style duplex stream.\",\n    invalidOptions: maxEventListeners => \"Invalid options. Received: { maxEventListeners: \".concat(maxEventListeners, \"}\"),\n    invalidRequestArgs: () => \"Expected a single, non-array, object argument.\",\n    invalidRequestMethod: () => \"'args.method' must be a non-empty string.\",\n    invalidRequestParams: () => \"'args.params' must be an object or array if provided.\",\n    invalidLoggerObject: () => \"'args.logger' must be an object if provided.\",\n    invalidLoggerMethod: method => \"'args.logger' must include required method '\".concat(method, \"'.\")\n  },\n  info: {\n    connected: chainId => \"Torus: Connected to chain with ID \\\"\".concat(chainId, \"\\\".\")\n  },\n  warnings: {}\n};\nconst PAYMENT_PROVIDER = {\n  MOONPAY: \"moonpay\",\n  WYRE: \"wyre\",\n  RAMPNETWORK: \"rampnetwork\",\n  XANPOOL: \"xanpool\",\n  MERCURYO: \"mercuryo\",\n  TRANSAK: \"transak\"\n};\nconst TORUS_BUILD_ENV = {\n  PRODUCTION: \"production\",\n  DEVELOPMENT: \"development\",\n  TESTING: \"testing\"\n};\nconst BUTTON_POSITION = {\n  BOTTOM_LEFT: \"bottom-left\",\n  TOP_LEFT: \"top-left\",\n  BOTTOM_RIGHT: \"bottom-right\",\n  TOP_RIGHT: \"top-right\"\n};\nconst LOGIN_PROVIDER = {\n  GOOGLE: \"google\",\n  FACEBOOK: \"facebook\",\n  REDDIT: \"reddit\",\n  DISCORD: \"discord\",\n  TWITCH: \"twitch\",\n  APPLE: \"apple\",\n  LINE: \"line\",\n  GITHUB: \"github\",\n  KAKAO: \"kakao\",\n  LINKEDIN: \"linkedin\",\n  TWITTER: \"twitter\",\n  WEIBO: \"weibo\",\n  WECHAT: \"wechat\",\n  EMAIL_PASSWORDLESS: \"email_passwordless\"\n};\nconst translations = {\n  en: {\n    embed: {\n      continue: \"Continue\",\n      actionRequired: \"Authorization required\",\n      pendingAction: \"Click continue to proceed with your request in a popup\",\n      cookiesRequired: \"Cookies Required\",\n      enableCookies: \"Please enable cookies in your browser preferences to access Torus\",\n      clickHere: \"More Info\"\n    }\n  },\n  de: {\n    embed: {\n      continue: \"Fortsetzen\",\n      actionRequired: \"Autorisierung erforderlich\",\n      pendingAction: \"Klicken Sie in einem Popup auf Weiter, um mit Ihrer Anfrage fortzufahren\",\n      cookiesRequired: \"Cookies benötigt\",\n      enableCookies: \"Bitte aktivieren Sie Cookies in Ihren Browsereinstellungen, um auf Torus zuzugreifen\",\n      clickHere: \"Mehr Info\"\n    }\n  },\n  ja: {\n    embed: {\n      continue: \"継続する\",\n      actionRequired: \"認証が必要です\",\n      pendingAction: \"続行をクリックして、ポップアップでリクエストを続行します\",\n      cookiesRequired: \"必要なクッキー\",\n      enableCookies: \"Torusにアクセスするには、ブラウザの設定でCookieを有効にしてください。\",\n      clickHere: \"詳しくは\"\n    }\n  },\n  ko: {\n    embed: {\n      continue: \"계속하다\",\n      actionRequired: \"승인 필요\",\n      pendingAction: \"팝업에서 요청을 진행하려면 계속을 클릭하십시오.\",\n      cookiesRequired: \"쿠키 필요\",\n      enableCookies: \"브라우저 환경 설정에서 쿠키를 활성화하여 Torus에 액세스하십시오.\",\n      clickHere: \"더 많은 정보\"\n    }\n  },\n  zh: {\n    embed: {\n      continue: \"继续\",\n      actionRequired: \"需要授权\",\n      pendingAction: \"单击继续以在弹出窗口中继续您的请求\",\n      cookiesRequired: \"必填Cookie\",\n      enableCookies: \"请在您的浏览器首选项中启用cookie以访问Torus。\",\n      clickHere: \"更多信息\"\n    }\n  }\n};\nvar configuration = {\n  supportedVerifierList: [LOGIN_PROVIDER.GOOGLE, LOGIN_PROVIDER.REDDIT, LOGIN_PROVIDER.DISCORD],\n  api: \"https://api.tor.us\",\n  translations,\n  prodTorusUrl: \"\",\n  localStorageKey: \"torus-\".concat(window.location.hostname)\n};\nvar log = loglevel.getLogger(\"solana-embed\");\n/**\n * json-rpc-engine middleware that logs RPC errors and and validates req.method.\n *\n * @param log - The logging API to use.\n * @returns  json-rpc-engine middleware function\n */\n\nfunction createErrorMiddleware() {\n  return (req, res, next) => {\n    // json-rpc-engine will terminate the request when it notices this error\n    if (typeof req.method !== \"string\" || !req.method) {\n      res.error = ethErrors.rpc.invalidRequest({\n        message: \"The request 'method' must be a non-empty string.\",\n        data: req\n      });\n    }\n\n    next(done => {\n      const {\n        error\n      } = res;\n\n      if (!error) {\n        return done();\n      }\n\n      log.error(\"Torus - RPC Error: \".concat(error.message), error);\n      return done();\n    });\n  };\n}\n/**\n * Logs a stream disconnection error. Emits an 'error' if given an\n * EventEmitter that has listeners for the 'error' event.\n *\n * @param log - The logging API to use.\n * @param remoteLabel - The label of the disconnected stream.\n * @param error - The associated error to log.\n * @param emitter - The logging API to use.\n */\n\n\nfunction logStreamDisconnectWarning(remoteLabel, error, emitter) {\n  let warningMsg = \"Torus: Lost connection to \\\"\".concat(remoteLabel, \"\\\".\");\n\n  if (error !== null && error !== void 0 && error.stack) {\n    warningMsg += \"\\n\".concat(error.stack);\n  }\n\n  log.warn(warningMsg);\n\n  if (emitter && emitter.listenerCount(\"error\") > 0) {\n    emitter.emit(\"error\", warningMsg);\n  }\n}\n\nconst getWindowId = () => Math.random().toString(36).slice(2);\n\nconst getTorusUrl = async buildEnv => {\n  let torusUrl;\n  let logLevel; // const versionUsed = version;\n  // log.info(\"solana embed version used: \", versionUsed);\n\n  switch (buildEnv) {\n    case \"testing\":\n      torusUrl = \"https://solana-testing.tor.us\";\n      logLevel = \"debug\";\n      break;\n\n    case \"development\":\n      torusUrl = \"http://localhost:8080\";\n      logLevel = \"debug\";\n      break;\n\n    default:\n      torusUrl = \"https://solana.tor.us\";\n      logLevel = \"error\";\n      break;\n  }\n\n  return {\n    torusUrl,\n    logLevel\n  };\n};\n\nconst getUserLanguage = () => {\n  let userLanguage = window.navigator.language || \"en-US\";\n  const userLanguages = userLanguage.split(\"-\");\n  userLanguage = Object.prototype.hasOwnProperty.call(configuration.translations, userLanguages[0]) ? userLanguages[0] : \"en\";\n  return userLanguage;\n};\n\nconst FEATURES_PROVIDER_CHANGE_WINDOW = {\n  height: 660,\n  width: 375\n};\nconst FEATURES_DEFAULT_WALLET_WINDOW = {\n  height: 740,\n  width: 1315\n};\nconst FEATURES_DEFAULT_POPUP_WINDOW = {\n  height: 700,\n  width: 1200\n};\nconst FEATURES_CONFIRM_WINDOW = {\n  height: 600,\n  width: 400\n};\n\nfunction storageAvailable(type) {\n  let storage;\n\n  try {\n    storage = window[type];\n    const x = \"__storage_test__\";\n    storage.setItem(x, x);\n    storage.removeItem(x);\n    return true;\n  } catch (e) {\n    return e && ( // everything except Firefox\n    e.code === 22 || // Firefox\n    e.code === 1014 || // test name field too, because code might not be present\n    // everything except Firefox\n    e.name === \"QuotaExceededError\" || // Firefox\n    e.name === \"NS_ERROR_DOM_QUOTA_REACHED\") && // acknowledge QuotaExceededError only if there's something already stored\n    storage && storage.length !== 0;\n  }\n}\n/**\n * popup handler utils\n */\n\n\nfunction getPopupFeatures(_ref) {\n  let {\n    width: w,\n    height: h\n  } = _ref; // Fixes dual-screen position                             Most browsers      Firefox\n\n  const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : window.screenX;\n  const dualScreenTop = window.screenTop !== undefined ? window.screenTop : window.screenY;\n  const width = window.innerWidth ? window.innerWidth : document.documentElement.clientWidth ? document.documentElement.clientWidth : window.screen.width;\n  const height = window.innerHeight ? window.innerHeight : document.documentElement.clientHeight ? document.documentElement.clientHeight : window.screen.height;\n  const systemZoom = 1; // No reliable estimate\n\n  const left = Math.abs((width - w) / 2 / systemZoom + dualScreenLeft);\n  const top = Math.abs((height - h) / 2 / systemZoom + dualScreenTop);\n  const features = \"titlebar=0,toolbar=0,status=0,location=0,menubar=0,height=\".concat(h / systemZoom, \",width=\").concat(w / systemZoom, \",top=\").concat(top, \",left=\").concat(left);\n  return features;\n}\n\nconst getNetworkConfig = label => {\n  switch (label) {\n    case \"mainnet-beta\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x1\",\n        displayName: \"Solana Mainnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.mainnet-beta.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\"\n      };\n\n    case \"testnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x2\",\n        displayName: \"Solana Testnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.testnet.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\"\n      };\n\n    case \"devnet\":\n      return {\n        blockExplorerUrl: \"https://explorer.solana.com\",\n        chainId: \"0x3\",\n        displayName: \"Solana Devnet\",\n        logo: \"solana.svg\",\n        rpcTarget: \"https://api.devnet.solana.com\",\n        ticker: \"SOL\",\n        tickerName: \"Solana Token\"\n      };\n\n    default:\n      return undefined;\n  }\n};\n\nclass BaseProvider extends SafeEventEmitter {\n  /**\n   * Indicating that this provider is a Torus provider.\n   */\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"isTorus\", void 0);\n\n    _defineProperty(this, \"_rpcEngine\", void 0);\n\n    _defineProperty(this, \"jsonRpcConnectionEvents\", void 0);\n\n    _defineProperty(this, \"_state\", void 0);\n\n    if (!isDuplexStream(connectionStream)) {\n      throw new Error(messages.errors.invalidDuplexStream());\n    }\n\n    this.isTorus = true;\n    this.setMaxListeners(maxEventListeners);\n    this._handleConnect = this._handleConnect.bind(this);\n    this._handleDisconnect = this._handleDisconnect.bind(this);\n    this._handleStreamDisconnect = this._handleStreamDisconnect.bind(this);\n    this._rpcRequest = this._rpcRequest.bind(this);\n    this._initializeState = this._initializeState.bind(this);\n    this.request = this.request.bind(this);\n    this.sendAsync = this.sendAsync.bind(this); // this.enable = this.enable.bind(this);\n    // setup connectionStream multiplexing\n\n    const mux = new ObjectMultiplex();\n    pump(connectionStream, mux, connectionStream, this._handleStreamDisconnect.bind(this, \"Torus\")); // ignore phishing warning message (handled elsewhere)\n\n    mux.ignoreStream(\"phishing\"); // setup own event listeners\n    // connect to async provider\n\n    const jsonRpcConnection = createStreamMiddleware();\n    pump(jsonRpcConnection.stream, mux.createStream(jsonRpcStreamName), jsonRpcConnection.stream, this._handleStreamDisconnect.bind(this, \"Torus RpcProvider\")); // handle RPC requests via dapp-side rpc engine\n\n    const rpcEngine = new JRPCEngine();\n    rpcEngine.push(createIdRemapMiddleware());\n    rpcEngine.push(createErrorMiddleware());\n    rpcEngine.push(createLoggerMiddleware({\n      origin: location.origin\n    }));\n    rpcEngine.push(jsonRpcConnection.middleware);\n    this._rpcEngine = rpcEngine;\n    this.jsonRpcConnectionEvents = jsonRpcConnection.events;\n  }\n  /**\n   * Submits an RPC request for the given method, with the given params.\n   * Resolves with the result of the method call, or rejects on error.\n   */\n\n\n  async request(args) {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestArgs(),\n        data: args\n      });\n    }\n\n    const {\n      method,\n      params\n    } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestMethod(),\n        data: args\n      });\n    }\n\n    if (params !== undefined && !Array.isArray(params) && (typeof params !== \"object\" || params === null)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: messages.errors.invalidRequestParams(),\n        data: args\n      });\n    }\n\n    return new Promise((resolve, reject) => {\n      this._rpcRequest({\n        method,\n        params\n      }, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n\n\n  send(payload, callback) {\n    this._rpcRequest(payload, callback);\n  }\n  /**\n   * Submits an RPC request per the given JSON-RPC request object.\n   */\n\n\n  sendAsync(payload) {\n    return new Promise((resolve, reject) => {\n      this._rpcRequest(payload, getRpcPromiseCallback(resolve, reject));\n    });\n  }\n  /**\n   * Called when connection is lost to critical streams.\n   *\n   * emits TorusInpageProvider#disconnect\n   */\n\n\n  _handleStreamDisconnect(streamName, error) {\n    logStreamDisconnectWarning(streamName, error, this);\n\n    this._handleDisconnect(false, error ? error.message : undefined);\n  }\n\n}\n\nconst handleEvent = function (handle, eventName, handler) {\n  for (var _len = arguments.length, handlerArgs = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n    handlerArgs[_key - 3] = arguments[_key];\n  }\n\n  const handlerWrapper = () => {\n    handler(...handlerArgs);\n    handle.removeEventListener(eventName, handlerWrapper);\n  };\n\n  handle.addEventListener(eventName, handlerWrapper);\n};\n\nasync function documentReady() {\n  return new Promise(resolve => {\n    if (document.readyState !== \"loading\") {\n      resolve();\n    } else {\n      handleEvent(document, \"DOMContentLoaded\", resolve);\n    }\n  });\n}\n\nconst htmlToElement = html => {\n  const template = window.document.createElement(\"template\");\n  const trimmedHtml = html.trim(); // Never return a text node of whitespace as the result\n\n  template.innerHTML = trimmedHtml;\n  return template.content.firstChild;\n};\n\nclass PopupHandler extends SafeEventEmitter {\n  constructor(_ref) {\n    let {\n      url,\n      target,\n      features\n    } = _ref;\n    super();\n\n    _defineProperty(this, \"url\", void 0);\n\n    _defineProperty(this, \"target\", void 0);\n\n    _defineProperty(this, \"features\", void 0);\n\n    _defineProperty(this, \"window\", void 0);\n\n    _defineProperty(this, \"windowTimer\", void 0);\n\n    _defineProperty(this, \"iClosedWindow\", void 0);\n\n    this.url = url;\n    this.target = target || \"_blank\";\n    this.features = features || getPopupFeatures(FEATURES_DEFAULT_POPUP_WINDOW);\n    this.window = undefined;\n    this.windowTimer = undefined;\n    this.iClosedWindow = false;\n\n    this._setupTimer();\n  }\n\n  _setupTimer() {\n    this.windowTimer = Number(setInterval(() => {\n      if (this.window && this.window.closed) {\n        clearInterval(this.windowTimer);\n\n        if (!this.iClosedWindow) {\n          this.emit(\"close\");\n        }\n\n        this.iClosedWindow = false;\n        this.window = undefined;\n      }\n\n      if (this.window === undefined) clearInterval(this.windowTimer);\n    }, 500));\n  }\n\n  open() {\n    var _this$window;\n\n    this.window = window.open(this.url.href, this.target, this.features);\n    if ((_this$window = this.window) !== null && _this$window !== void 0 && _this$window.focus) this.window.focus();\n    return Promise.resolve();\n  }\n\n  close() {\n    this.iClosedWindow = true;\n    if (this.window) this.window.close();\n  }\n\n  redirect(locationReplaceOnRedirect) {\n    if (locationReplaceOnRedirect) {\n      window.location.replace(this.url.href);\n    } else {\n      window.location.href = this.url.href;\n    }\n  }\n\n}\n\nfunction ownKeys$2(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$2(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$2(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nclass TorusCommunicationProvider extends BaseProvider {\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    }); // private state\n\n    _defineProperty(this, \"embedTranslations\", void 0);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"dappStorageKey\", void 0);\n\n    _defineProperty(this, \"windowRefs\", void 0);\n\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    this._state = _objectSpread$2({}, TorusCommunicationProvider._defaultState); // public state\n\n    this.torusUrl = \"\";\n    this.dappStorageKey = \"\";\n    const languageTranslations = configuration.translations[getUserLanguage()];\n    this.embedTranslations = languageTranslations.embed;\n    this.windowRefs = {}; // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const notificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n\n      if (method === COMMUNICATION_NOTIFICATIONS.IFRAME_STATUS) {\n        const {\n          isFullScreen,\n          rid\n        } = params;\n\n        this._displayIframe({\n          isFull: isFullScreen,\n          rid: rid\n        });\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CREATE_WINDOW) {\n        const {\n          windowId,\n          url\n        } = params;\n\n        this._createPopupBlockAlert(windowId, url);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.CLOSE_WINDOW) {\n        this._handleCloseWindow(params);\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_IN) {\n        const {\n          currentLoginProvider\n        } = params;\n        this._state.isLoggedIn = true;\n        this._state.currentLoginProvider = currentLoginProvider;\n      } else if (method === COMMUNICATION_NOTIFICATIONS.USER_LOGGED_OUT) {\n        this._state.isLoggedIn = false;\n        this._state.currentLoginProvider = null;\n\n        this._displayIframe();\n      }\n    };\n\n    this.jsonRpcConnectionEvents.on(\"notification\", notificationHandler);\n  }\n\n  get isLoggedIn() {\n    return this._state.isLoggedIn;\n  }\n\n  get isIFrameFullScreen() {\n    return this._state.isIFrameFullScreen;\n  }\n  /**\n   * Returns whether the inPage provider is connected to Torus.\n   */\n\n\n  isConnected() {\n    return this._state.isConnected;\n  }\n\n  async _initializeState(params) {\n    try {\n      const {\n        torusUrl,\n        dappStorageKey,\n        torusAlertContainer,\n        torusIframe\n      } = params;\n      this.torusUrl = torusUrl;\n      this.dappStorageKey = dappStorageKey;\n      this.torusAlertContainer = torusAlertContainer;\n      this.torusIframe = torusIframe;\n      this.torusIframe.addEventListener(\"load\", () => {\n        // only do this if iframe is not full screen\n        if (!this._state.isIFrameFullScreen) this._displayIframe();\n      });\n      const {\n        currentLoginProvider,\n        isLoggedIn\n      } = await this.request({\n        method: COMMUNICATION_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this._handleConnect(currentLoginProvider, isLoggedIn);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized communication state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n\n  _handleWindow(windowId) {\n    let {\n      url,\n      target,\n      features\n    } = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const finalUrl = new URL(url || \"\".concat(this.torusUrl, \"/redirect?windowId=\").concat(windowId));\n\n    if (this.dappStorageKey) {\n      // If multiple instances, it returns the first one\n      if (finalUrl.hash) finalUrl.hash += \"&dappStorageKey=\".concat(this.dappStorageKey);else finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n    }\n\n    const handledWindow = new PopupHandler({\n      url: finalUrl,\n      target,\n      features\n    });\n    handledWindow.open();\n\n    if (!handledWindow.window) {\n      this._createPopupBlockAlert(windowId, finalUrl.href);\n\n      return;\n    } // Add to collection only if window is opened\n\n\n    this.windowRefs[windowId] = handledWindow; // We tell the iframe that the window has been successfully opened\n\n    this.request({\n      method: COMMUNICATION_JRPC_METHODS.OPENED_WINDOW,\n      params: {\n        windowId\n      }\n    });\n    handledWindow.once(\"close\", () => {\n      // user closed the window\n      delete this.windowRefs[windowId];\n      this.request({\n        method: COMMUNICATION_JRPC_METHODS.CLOSED_WINDOW,\n        params: {\n          windowId\n        }\n      });\n    });\n  }\n\n  _displayIframe() {\n    let {\n      isFull = false,\n      rid = \"\"\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    const style = {}; // set phase\n\n    if (!isFull) {\n      style.display = this._state.torusWidgetVisibility ? \"block\" : \"none\";\n      style.height = \"70px\";\n      style.width = \"70px\";\n\n      switch (this._state.buttonPosition) {\n        case BUTTON_POSITION.TOP_LEFT:\n          style.top = \"0px\";\n          style.left = \"0px\";\n          style.right = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.TOP_RIGHT:\n          style.top = \"0px\";\n          style.right = \"0px\";\n          style.left = \"auto\";\n          style.bottom = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_RIGHT:\n          style.bottom = \"0px\";\n          style.right = \"0px\";\n          style.top = \"auto\";\n          style.left = \"auto\";\n          break;\n\n        case BUTTON_POSITION.BOTTOM_LEFT:\n        default:\n          style.bottom = \"0px\";\n          style.left = \"0px\";\n          style.top = \"auto\";\n          style.right = \"auto\";\n          break;\n      }\n    } else {\n      style.display = \"block\";\n      style.width = \"100%\";\n      style.height = \"100%\";\n      style.top = \"0px\";\n      style.right = \"0px\";\n      style.left = \"0px\";\n      style.bottom = \"0px\";\n    }\n\n    Object.assign(this.torusIframe.style, style);\n    this._state.isIFrameFullScreen = isFull;\n    this.request({\n      method: COMMUNICATION_JRPC_METHODS.IFRAME_STATUS,\n      params: {\n        isIFrameFullScreen: isFull,\n        rid\n      }\n    });\n  }\n\n  hideTorusButton() {\n    this._state.torusWidgetVisibility = false;\n\n    this._displayIframe();\n  }\n\n  showTorusButton() {\n    this._state.torusWidgetVisibility = true;\n\n    this._displayIframe();\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n\n\n  _rpcRequest(payload, callback) {\n    const cb = callback;\n    const _payload = payload;\n\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n    }\n\n    this.tryWindowHandle(_payload, cb);\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param currentLoginProvider - The login Provider\n   * emits TorusInpageProvider#connect\n   */\n\n\n  _handleConnect(currentLoginProvider, isLoggedIn) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        currentLoginProvider,\n        isLoggedIn\n      });\n      log.debug(messages.info.connected(currentLoginProvider));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013, // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011, // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this._state.currentLoginProvider = null;\n        this._state.isLoggedIn = false;\n        this._state.torusWidgetVisibility = false;\n        this._state.isIFrameFullScreen = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  } // Called if the iframe wants to close the window cause it is done processing the request\n\n\n  _handleCloseWindow(params) {\n    const {\n      windowId\n    } = params;\n\n    if (this.windowRefs[windowId]) {\n      this.windowRefs[windowId].close();\n      delete this.windowRefs[windowId];\n    }\n  }\n\n  async _createPopupBlockAlert(windowId, url) {\n    const logoUrl = this.getLogoUrl();\n    const torusAlert = htmlToElement('<div id=\"torusAlert\" class=\"torus-alert--v2\">' + \"<div id=\\\"torusAlert__logo\\\"><img src=\\\"\".concat(logoUrl, \"\\\" /></div>\") + \"<div>\" + \"<h1 id=\\\"torusAlert__title\\\">\".concat(this.embedTranslations.actionRequired, \"</h1>\") + \"<p id=\\\"torusAlert__desc\\\">\".concat(this.embedTranslations.pendingAction, \"</p>\") + \"</div>\" + \"</div>\");\n    const successAlert = htmlToElement(\"<div><a id=\\\"torusAlert__btn\\\">\".concat(this.embedTranslations.continue, \"</a></div>\"));\n    const btnContainer = htmlToElement('<div id=\"torusAlert__btn-container\"></div>');\n    btnContainer.appendChild(successAlert);\n    torusAlert.appendChild(btnContainer);\n\n    const bindOnLoad = () => {\n      successAlert.addEventListener(\"click\", () => {\n        this._handleWindow(windowId, {\n          url,\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW)\n        });\n\n        torusAlert.remove();\n        if (this.torusAlertContainer.children.length === 0) this.torusAlertContainer.style.display = \"none\";\n      });\n    };\n\n    const attachOnLoad = () => {\n      this.torusAlertContainer.appendChild(torusAlert);\n    };\n\n    await documentReady();\n    attachOnLoad();\n    bindOnLoad();\n    this.torusAlertContainer.style.display = \"block\";\n  }\n\n  getLogoUrl() {\n    const logoUrl = \"\".concat(this.torusUrl, \"/images/torus_icon-blue.svg\");\n    return logoUrl;\n  }\n\n}\n\n_defineProperty(TorusCommunicationProvider, \"_defaultState\", {\n  buttonPosition: \"bottom-left\",\n  currentLoginProvider: null,\n  isIFrameFullScreen: false,\n  hasEmittedConnection: false,\n  torusWidgetVisibility: false,\n  initialized: false,\n  isLoggedIn: false,\n  isPermanentlyDisconnected: false,\n  isConnected: false\n});\n\nfunction ownKeys$1(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread$1(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys$1(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys$1(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nclass TorusInPageProvider extends BaseProvider {\n  /**\n   * The chain ID of the currently connected Solana chain.\n   * See [chainId.network]{@link https://chainid.network} for more information.\n   */\n\n  /**\n   * The user's currently selected Solana address.\n   * If null, Torus is either locked or the user has not permitted any\n   * addresses to be viewed.\n   */\n  constructor(connectionStream, _ref) {\n    let {\n      maxEventListeners = 100,\n      jsonRpcStreamName = \"provider\"\n    } = _ref;\n    super(connectionStream, {\n      maxEventListeners,\n      jsonRpcStreamName\n    }); // private state\n\n    _defineProperty(this, \"chainId\", void 0);\n\n    _defineProperty(this, \"selectedAddress\", void 0);\n\n    _defineProperty(this, \"tryWindowHandle\", void 0);\n\n    this._state = _objectSpread$1({}, TorusInPageProvider._defaultState); // public state\n\n    this.selectedAddress = null;\n    this.chainId = null;\n    this._handleAccountsChanged = this._handleAccountsChanged.bind(this);\n    this._handleChainChanged = this._handleChainChanged.bind(this);\n    this._handleUnlockStateChanged = this._handleUnlockStateChanged.bind(this); // setup own event listeners\n    // EIP-1193 connect\n\n    this.on(\"connect\", () => {\n      this._state.isConnected = true;\n    });\n\n    const jsonRpcNotificationHandler = payload => {\n      const {\n        method,\n        params\n      } = payload;\n\n      if (method === PROVIDER_NOTIFICATIONS.ACCOUNTS_CHANGED) {\n        this._handleAccountsChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.UNLOCK_STATE_CHANGED) {\n        this._handleUnlockStateChanged(params);\n      } else if (method === PROVIDER_NOTIFICATIONS.CHAIN_CHANGED) {\n        this._handleChainChanged(params);\n      }\n    }; // json rpc notification listener\n\n\n    this.jsonRpcConnectionEvents.on(\"notification\", jsonRpcNotificationHandler);\n  }\n  /**\n   * Returns whether the inpage provider is connected to Torus.\n   */\n\n\n  isConnected() {\n    return this._state.isConnected;\n  } // Private Methods\n  //= ===================\n\n  /**\n   * Constructor helper.\n   * Populates initial state by calling 'wallet_getProviderState' and emits\n   * necessary events.\n   */\n\n\n  async _initializeState() {\n    try {\n      const {\n        accounts,\n        chainId,\n        isUnlocked\n      } = await this.request({\n        method: PROVIDER_JRPC_METHODS.GET_PROVIDER_STATE,\n        params: []\n      }); // indicate that we've connected, for EIP-1193 compliance\n\n      this.emit(\"connect\", {\n        chainId\n      });\n\n      this._handleChainChanged({\n        chainId\n      });\n\n      this._handleUnlockStateChanged({\n        accounts,\n        isUnlocked\n      });\n\n      this._handleAccountsChanged(accounts);\n    } catch (error) {\n      log.error(\"Torus: Failed to get initial state. Please report this bug.\", error);\n    } finally {\n      log.info(\"initialized provider state\");\n      this._state.initialized = true;\n      this.emit(\"_initialized\");\n    }\n  }\n  /**\n   * Internal RPC method. Forwards requests to background via the RPC engine.\n   * Also remap ids inbound and outbound\n   */\n\n\n  _rpcRequest(payload, callback) {\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    let cb = callback;\n    const _payload = payload;\n\n    if (!Array.isArray(_payload)) {\n      if (!_payload.jsonrpc) {\n        _payload.jsonrpc = \"2.0\";\n      }\n\n      if (_payload.method === \"solana_accounts\" || _payload.method === \"solana_requestAccounts\") {\n        // handle accounts changing\n        cb = (err, res) => {\n          this._handleAccountsChanged(res.result || [], _payload.method === \"solana_accounts\", isInternal);\n\n          callback(err, res);\n        };\n      } else if (_payload.method === \"wallet_getProviderState\") {\n        this._rpcEngine.handle(payload, cb);\n\n        return;\n      }\n    }\n\n    this.tryWindowHandle(_payload, cb);\n  }\n  /**\n   * When the provider becomes connected, updates internal state and emits\n   * required events. Idempotent.\n   *\n   * @param chainId - The ID of the newly connected chain.\n   * emits TorusInpageProvider#connect\n   */\n\n\n  _handleConnect(chainId) {\n    if (!this._state.isConnected) {\n      this._state.isConnected = true;\n      this.emit(\"connect\", {\n        chainId\n      });\n      log.debug(messages.info.connected(chainId));\n    }\n  }\n  /**\n   * When the provider becomes disconnected, updates internal state and emits\n   * required events. Idempotent with respect to the isRecoverable parameter.\n   *\n   * Error codes per the CloseEvent status codes as required by EIP-1193:\n   * https://developer.mozilla.org/en-US/docs/Web/API/CloseEvent#Status_codes\n   *\n   * @param isRecoverable - Whether the disconnection is recoverable.\n   * @param errorMessage - A custom error message.\n   * emits TorusInpageProvider#disconnect\n   */\n\n\n  _handleDisconnect(isRecoverable, errorMessage) {\n    if (this._state.isConnected || !this._state.isPermanentlyDisconnected && !isRecoverable) {\n      this._state.isConnected = false;\n      let error;\n\n      if (isRecoverable) {\n        error = new EthereumRpcError(1013, // Try again later\n        errorMessage || messages.errors.disconnected());\n        log.debug(error);\n      } else {\n        error = new EthereumRpcError(1011, // Internal error\n        errorMessage || messages.errors.permanentlyDisconnected());\n        log.error(error);\n        this.chainId = null;\n        this._state.accounts = null;\n        this.selectedAddress = null;\n        this._state.isUnlocked = false;\n        this._state.isPermanentlyDisconnected = true;\n      }\n\n      this.emit(\"disconnect\", error);\n    }\n  }\n  /**\n   * Called when accounts may have changed.\n   */\n\n\n  _handleAccountsChanged(accounts) {\n    let isEthAccounts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    let isInternal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false; // defensive programming\n\n    let finalAccounts = accounts;\n\n    if (!Array.isArray(finalAccounts)) {\n      log.error(\"Torus: Received non-array accounts parameter. Please report this bug.\", finalAccounts);\n      finalAccounts = [];\n    }\n\n    for (const account of accounts) {\n      if (typeof account !== \"string\") {\n        log.error(\"Torus: Received non-string account. Please report this bug.\", accounts);\n        finalAccounts = [];\n        break;\n      }\n    } // emit accountsChanged if anything about the accounts array has changed\n\n\n    if (!dequal(this._state.accounts, finalAccounts)) {\n      // we should always have the correct accounts even before solana_accounts\n      // returns, except in cases where isInternal is true\n      if (isEthAccounts && Array.isArray(this._state.accounts) && this._state.accounts.length > 0 && !isInternal) {\n        log.error('Torus: \"solana_accounts\" unexpectedly updated accounts. Please report this bug.', finalAccounts);\n      }\n\n      this._state.accounts = finalAccounts;\n      this.emit(\"accountsChanged\", finalAccounts);\n    } // handle selectedAddress\n\n\n    if (this.selectedAddress !== finalAccounts[0]) {\n      this.selectedAddress = finalAccounts[0] || null;\n    }\n  }\n  /**\n   * Upon receipt of a new chainId and networkVersion, emits corresponding\n   * events and sets relevant public state.\n   * Does nothing if neither the chainId nor the networkVersion are different\n   * from existing values.\n   *\n   * emits TorusInpageProvider#chainChanged\n   * @param networkInfo - An object with network info.\n   */\n\n\n  _handleChainChanged() {\n    let {\n      chainId\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!chainId) {\n      log.error(\"Torus: Received invalid network parameters. Please report this bug.\", {\n        chainId\n      });\n      return;\n    }\n\n    if (chainId === \"loading\") {\n      this._handleDisconnect(true);\n    } else {\n      this._handleConnect(chainId);\n\n      if (chainId !== this.chainId) {\n        this.chainId = chainId;\n\n        if (this._state.initialized) {\n          this.emit(\"chainChanged\", this.chainId);\n        }\n      }\n    }\n  }\n  /**\n   * Upon receipt of a new isUnlocked state, sets relevant public state.\n   * Calls the accounts changed handler with the received accounts, or an empty\n   * array.\n   *\n   * Does nothing if the received value is equal to the existing value.\n   * There are no lock/unlock events.\n   *\n   * @param opts - Options bag.\n   */\n\n\n  _handleUnlockStateChanged() {\n    let {\n      accounts,\n      isUnlocked\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (typeof isUnlocked !== \"boolean\") {\n      log.error(\"Torus: Received invalid isUnlocked parameter. Please report this bug.\", {\n        isUnlocked\n      });\n      return;\n    }\n\n    if (isUnlocked !== this._state.isUnlocked) {\n      this._state.isUnlocked = isUnlocked;\n\n      this._handleAccountsChanged(accounts || []);\n    }\n  }\n\n}\n\n_defineProperty(TorusInPageProvider, \"_defaultState\", {\n  accounts: null,\n  isConnected: false,\n  isUnlocked: false,\n  initialized: false,\n  isPermanentlyDisconnected: false,\n  hasEmittedConnection: false\n});\n/**\n * Returns whether the given image URL exists\n */\n\n\nfunction imgExists(url) {\n  return new Promise((resolve, reject) => {\n    try {\n      const img = document.createElement(\"img\");\n\n      img.onload = () => resolve(true);\n\n      img.onerror = () => resolve(false);\n\n      img.src = url;\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n/**\n * Extracts a name for the site from the DOM\n */\n\n\nconst getSiteName = window => {\n  const {\n    document\n  } = window;\n  const siteName = document.querySelector('head > meta[property=\"og:site_name\"]');\n\n  if (siteName) {\n    return siteName.content;\n  }\n\n  const metaTitle = document.querySelector('head > meta[name=\"title\"]');\n\n  if (metaTitle) {\n    return metaTitle.content;\n  }\n\n  if (document.title && document.title.length > 0) {\n    return document.title;\n  }\n\n  return window.location.hostname;\n};\n/**\n * Extracts an icon for the site from the DOM\n */\n\n\nasync function getSiteIcon(window) {\n  try {\n    const {\n      document\n    } = window; // Use the site's favicon if it exists\n\n    let icon = document.querySelector('head > link[rel=\"shortcut icon\"]');\n\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    } // Search through available icons in no particular order\n\n\n    icon = Array.from(document.querySelectorAll('head > link[rel=\"icon\"]')).find(_icon => Boolean(_icon.href));\n\n    if (icon && (await imgExists(icon.href))) {\n      return icon.href;\n    }\n\n    return \"\";\n  } catch (error) {\n    return \"\";\n  }\n}\n/**\n * Gets site metadata and returns it\n *\n */\n\n\nconst getSiteMetadata = async () => ({\n  name: getSiteName(window),\n  icon: await getSiteIcon(window)\n});\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    enumerableOnly && (symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    })), keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = null != arguments[i] ? arguments[i] : {};\n    i % 2 ? ownKeys(Object(source), !0).forEach(function (key) {\n      _defineProperty(target, key, source[key]);\n    }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) {\n      Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n    });\n  }\n\n  return target;\n}\n\nconst PROVIDER_UNSAFE_METHODS = [\"send_transaction\", \"sign_transaction\", \"sign_all_transactions\", \"sign_message\", \"connect\"];\nconst COMMUNICATION_UNSAFE_METHODS = [COMMUNICATION_JRPC_METHODS.SET_PROVIDER];\nconst isLocalStorageAvailable = storageAvailable(\"localStorage\"); // preload for iframe doesn't work https://bugs.chromium.org/p/chromium/issues/detail?id=593267\n\n(async function preLoadIframe() {\n  try {\n    if (typeof document === \"undefined\") return;\n    const torusIframeHtml = document.createElement(\"link\");\n    const {\n      torusUrl\n    } = await getTorusUrl(\"production\");\n    torusIframeHtml.href = \"\".concat(torusUrl, \"/frame\");\n    torusIframeHtml.crossOrigin = \"anonymous\";\n    torusIframeHtml.type = \"text/html\";\n    torusIframeHtml.rel = \"prefetch\";\n\n    if (torusIframeHtml.relList && torusIframeHtml.relList.supports) {\n      if (torusIframeHtml.relList.supports(\"prefetch\")) {\n        document.head.appendChild(torusIframeHtml);\n      }\n    }\n  } catch (error) {\n    log.warn(error);\n  }\n})();\n\nclass Torus {\n  constructor() {\n    let {\n      modalZIndex = 99999\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    _defineProperty(this, \"isInitialized\", void 0);\n\n    _defineProperty(this, \"torusAlert\", void 0);\n\n    _defineProperty(this, \"modalZIndex\", void 0);\n\n    _defineProperty(this, \"alertZIndex\", void 0);\n\n    _defineProperty(this, \"requestedLoginProvider\", void 0);\n\n    _defineProperty(this, \"provider\", void 0);\n\n    _defineProperty(this, \"communicationProvider\", void 0);\n\n    _defineProperty(this, \"dappStorageKey\", void 0);\n\n    _defineProperty(this, \"torusAlertContainer\", void 0);\n\n    _defineProperty(this, \"torusUrl\", void 0);\n\n    _defineProperty(this, \"torusIframe\", void 0);\n\n    _defineProperty(this, \"styleLink\", void 0);\n\n    this.torusUrl = \"\";\n    this.isInitialized = false; // init done\n\n    this.requestedLoginProvider = null;\n    this.modalZIndex = modalZIndex;\n    this.alertZIndex = modalZIndex + 1000;\n    this.dappStorageKey = \"\";\n  }\n\n  get isLoggedIn() {\n    if (!this.communicationProvider) return false;\n    return this.communicationProvider.isLoggedIn;\n  }\n\n  async init() {\n    let {\n      buildEnv = TORUS_BUILD_ENV.PRODUCTION,\n      enableLogging = false,\n      network,\n      showTorusButton = false,\n      useLocalStorage = false,\n      buttonPosition = BUTTON_POSITION.BOTTOM_LEFT,\n      apiKey = \"torus-default\",\n      extraParams = {}\n    } = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (this.isInitialized) throw new Error(\"Already initialized\");\n    setAPIKey(apiKey);\n    const {\n      torusUrl,\n      logLevel\n    } = await getTorusUrl(buildEnv);\n    log.info(torusUrl, \"url loaded\");\n    this.torusUrl = torusUrl;\n    log.setDefaultLevel(logLevel);\n    if (enableLogging) log.enableAll();else log.disableAll();\n    const dappStorageKey = this.handleDappStorageKey(useLocalStorage);\n    const torusIframeUrl = new URL(torusUrl);\n    if (torusIframeUrl.pathname.endsWith(\"/\")) torusIframeUrl.pathname += \"frame\";else torusIframeUrl.pathname += \"/frame\";\n    const hashParams = new URLSearchParams();\n    if (dappStorageKey) hashParams.append(\"dappStorageKey\", dappStorageKey);\n    hashParams.append(\"origin\", window.location.origin);\n    torusIframeUrl.hash = hashParams.toString(); // Iframe code\n\n    this.torusIframe = htmlToElement(\"<iframe\\n        id=\\\"torusIframe\\\"\\n        class=\\\"torusIframe\\\"\\n        src=\\\"\".concat(torusIframeUrl.href, \"\\\"\\n        style=\\\"display: none; position: fixed; top: 0; right: 0; width: 100%;\\n        height: 100%; border: none; border-radius: 0; z-index: \").concat(this.modalZIndex.toString(), \"\\\"\\n      ></iframe>\"));\n    this.torusAlertContainer = htmlToElement(\"<div id=\\\"torusAlertContainer\\\" style=\\\"display:none; z-index: \".concat(this.alertZIndex.toString(), \"\\\"></div>\"));\n    this.styleLink = htmlToElement(\"<link href=\\\"\".concat(torusUrl, \"/css/widget.css\\\" rel=\\\"stylesheet\\\" type=\\\"text/css\\\">\"));\n\n    const handleSetup = async () => {\n      return new Promise((resolve, reject) => {\n        try {\n          window.document.head.appendChild(this.styleLink);\n          window.document.body.appendChild(this.torusIframe);\n          window.document.body.appendChild(this.torusAlertContainer);\n          this.torusIframe.addEventListener(\"load\", async () => {\n            const dappMetadata = await getSiteMetadata(); // send init params here\n\n            this.torusIframe.contentWindow.postMessage({\n              buttonPosition,\n              apiKey,\n              network: typeof network === \"string\" ? getNetworkConfig(network) : network,\n              dappMetadata,\n              extraParams\n            }, torusIframeUrl.origin);\n            await this._setupWeb3({\n              torusUrl\n            });\n            if (showTorusButton) this.showTorusButton();else this.hideTorusButton();\n            this.isInitialized = true;\n            window.torus = this;\n            resolve();\n          });\n        } catch (error) {\n          reject(error);\n        }\n      });\n    };\n\n    await documentReady();\n    await handleSetup();\n  }\n\n  async login() {\n    let params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!this.isInitialized) throw new Error(\"Call init() first\");\n\n    try {\n      this.requestedLoginProvider = params.loginProvider || null;\n\n      if (!this.requestedLoginProvider) {\n        this.communicationProvider._displayIframe({\n          isFull: true\n        });\n      } // If user is already logged in, we assume they have given access to the website\n\n\n      const res = await new Promise((resolve, reject) => {\n        // We use this method because we want to update inPage provider state with account info\n        this.provider._rpcRequest({\n          method: \"solana_requestAccounts\",\n          params: [this.requestedLoginProvider, params.login_hint]\n        }, getRpcPromiseCallback(resolve, reject));\n      });\n\n      if (Array.isArray(res) && res.length > 0) {\n        return res;\n      } // This would never happen, but just in case\n\n\n      throw new Error(\"Login failed\");\n    } catch (error) {\n      log.error(\"login failed\", error);\n      throw error;\n    } finally {\n      if (this.communicationProvider.isIFrameFullScreen) this.communicationProvider._displayIframe();\n    }\n  }\n\n  async logout() {\n    if (!this.communicationProvider.isLoggedIn) throw new Error(\"Not logged in\");\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.LOGOUT,\n      params: []\n    });\n    this.requestedLoginProvider = null;\n  }\n\n  async cleanUp() {\n    if (this.communicationProvider.isLoggedIn) {\n      await this.logout();\n    }\n\n    this.clearInit();\n  }\n\n  clearInit() {\n    function isElement(element) {\n      return element instanceof Element || element instanceof Document;\n    }\n\n    if (isElement(this.styleLink) && window.document.body.contains(this.styleLink)) {\n      this.styleLink.remove();\n      this.styleLink = undefined;\n    }\n\n    if (isElement(this.torusIframe) && window.document.body.contains(this.torusIframe)) {\n      this.torusIframe.remove();\n      this.torusIframe = undefined;\n    }\n\n    if (isElement(this.torusAlertContainer) && window.document.body.contains(this.torusAlertContainer)) {\n      this.torusAlert = undefined;\n      this.torusAlertContainer.remove();\n      this.torusAlertContainer = undefined;\n    }\n\n    this.isInitialized = false;\n  }\n\n  hideTorusButton() {\n    this.communicationProvider.hideTorusButton();\n  }\n\n  showTorusButton() {\n    this.communicationProvider.showTorusButton();\n  }\n\n  async setProvider(params) {\n    await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.SET_PROVIDER,\n      params: _objectSpread({}, params)\n    });\n  }\n\n  async showWallet(path) {\n    let params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    const instanceId = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.WALLET_INSTANCE_ID,\n      params: []\n    });\n    const finalPath = path ? \"/\".concat(path) : \"\";\n    const finalUrl = new URL(\"\".concat(this.torusUrl, \"/wallet\").concat(finalPath)); // Using URL constructor to prevent js injection and allow parameter validation.!\n\n    finalUrl.searchParams.append(\"instanceId\", instanceId);\n    Object.keys(params).forEach(x => {\n      finalUrl.searchParams.append(x, params[x]);\n    });\n\n    if (this.dappStorageKey) {\n      finalUrl.hash = \"#dappStorageKey=\".concat(this.dappStorageKey);\n    } // No need to track this window state. Hence, no _handleWindow call.\n\n\n    const walletWindow = new PopupHandler({\n      url: finalUrl,\n      features: getPopupFeatures(FEATURES_DEFAULT_WALLET_WINDOW)\n    });\n    walletWindow.open();\n  }\n\n  async getUserInfo() {\n    const userInfoResponse = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.USER_INFO,\n      params: []\n    });\n    return userInfoResponse;\n  }\n\n  async initiateTopup(provider, params) {\n    if (!this.isInitialized) throw new Error(\"Torus is not initialized\");\n    const windowId = getWindowId();\n\n    this.communicationProvider._handleWindow(windowId);\n\n    const topupResponse = await this.communicationProvider.request({\n      method: COMMUNICATION_JRPC_METHODS.TOPUP,\n      params: {\n        provider,\n        params,\n        windowId\n      }\n    });\n    return topupResponse;\n  } // Solana specific API\n\n\n  async sendTransaction(transaction) {\n    const response = await this.provider.request({\n      method: \"send_transaction\",\n      // params: { message: transaction.serializeMessage().toString(\"hex\") },\n      params: {\n        message: transaction.serialize({\n          requireAllSignatures: false\n        }).toString(\"hex\")\n      }\n    });\n    return response;\n  }\n\n  async signTransaction(transaction) {\n    const response = await this.provider.request({\n      method: \"sign_transaction\",\n      // params: { message: transaction.serializeMessage().toString(\"hex\") },\n      params: {\n        message: transaction.serialize({\n          requireAllSignatures: false\n        }).toString(\"hex\")\n      }\n    });\n    const buf = Buffer.from(response, \"hex\");\n    const sendTx = Transaction.from(buf);\n    return sendTx;\n  }\n\n  async signAllTransactions(transactions) {\n    const encodedTransactions = transactions.map(x => x.serialize({\n      requireAllSignatures: false\n    }).toString(\"hex\"));\n    const response = await this.provider.request({\n      method: \"sign_all_transactions\",\n      params: {\n        message: encodedTransactions\n      }\n    });\n    const allSignedTransaction = response.map(msg => Transaction.from(Buffer.from(msg, \"hex\")));\n    return allSignedTransaction;\n  }\n\n  async signMessage(data) {\n    const response = await this.provider.request({\n      method: \"sign_message\",\n      params: {\n        data\n      }\n    });\n    return response;\n  }\n\n  async getGaslessPublicKey() {\n    const response = await this.provider.request({\n      method: \"get_gasless_public_key\",\n      params: []\n    });\n    return response;\n  } // async connect(): Promise<boolean> {\n  //   const response = (await this.provider.request({\n  //     method: \"connect\",\n  //     params: {},\n  //   })) as boolean;\n  //   return response;\n  // }\n\n\n  handleDappStorageKey(useLocalStorage) {\n    let dappStorageKey = \"\";\n\n    if (isLocalStorageAvailable && useLocalStorage) {\n      const storedKey = window.localStorage.getItem(configuration.localStorageKey);\n      if (storedKey) dappStorageKey = storedKey;else {\n        const generatedKey = \"torus-app-\".concat(getWindowId());\n        window.localStorage.setItem(configuration.localStorageKey, generatedKey);\n        dappStorageKey = generatedKey;\n      }\n    }\n\n    this.dappStorageKey = dappStorageKey;\n    return dappStorageKey;\n  }\n\n  async _setupWeb3(providerParams) {\n    log.info(\"setupWeb3 running\"); // setup background connection\n\n    const providerStream = new BasePostMessageStream({\n      name: \"embed_torus\",\n      target: \"iframe_torus\",\n      targetWindow: this.torusIframe.contentWindow\n    }); // We create another LocalMessageDuplexStream for communication between dapp <> iframe\n\n    const communicationStream = new BasePostMessageStream({\n      name: \"embed_communication\",\n      target: \"iframe_communication\",\n      targetWindow: this.torusIframe.contentWindow\n    }); // compose the inPage provider\n\n    const inPageProvider = new TorusInPageProvider(providerStream, {});\n    const communicationProvider = new TorusCommunicationProvider(communicationStream, {});\n\n    inPageProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n\n      if (!Array.isArray(_payload) && PROVIDER_UNSAFE_METHODS.includes(_payload.method)) {\n        if (!this.communicationProvider.isLoggedIn) throw new Error(\"User Not Logged In\");\n        const windowId = getWindowId();\n\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_CONFIRM_WINDOW)\n        }); // for inPageProvider methods sending windowId in request instead of params\n        // as params might be positional.\n\n\n        _payload.windowId = windowId;\n      }\n\n      inPageProvider._rpcEngine.handle(_payload, cb);\n    };\n\n    communicationProvider.tryWindowHandle = (payload, cb) => {\n      const _payload = payload;\n\n      if (!Array.isArray(_payload) && COMMUNICATION_UNSAFE_METHODS.includes(_payload.method)) {\n        const windowId = getWindowId();\n\n        communicationProvider._handleWindow(windowId, {\n          target: \"_blank\",\n          features: getPopupFeatures(FEATURES_PROVIDER_CHANGE_WINDOW) // todo: are these features generic for all\n\n        }); // for communication methods sending window id in jrpc req params\n\n\n        _payload.params.windowId = windowId;\n      }\n\n      communicationProvider._rpcEngine.handle(_payload, cb);\n    }; // detect solana_requestAccounts and pipe to enable for now\n\n\n    const detectAccountRequestPrototypeModifier = m => {\n      const originalMethod = inPageProvider[m]; // eslint-disable-next-line @typescript-eslint/no-this-alias\n\n      const self = this;\n\n      inPageProvider[m] = function providerFunc(request, cb) {\n        const {\n          method,\n          params = []\n        } = request;\n\n        if (method === \"solana_requestAccounts\") {\n          if (!cb) return self.login({\n            loginProvider: params[0]\n          });\n          self.login({\n            loginProvider: params[0]\n          }) // eslint-disable-next-line promise/no-callback-in-promise\n          .then(res => cb(null, res)) // eslint-disable-next-line promise/no-callback-in-promise\n          .catch(err => cb(err));\n        }\n\n        return originalMethod.apply(this, [request, cb]);\n      };\n    }; // Detects call to solana_requestAccounts in request & sendAsync and passes to login\n\n\n    detectAccountRequestPrototypeModifier(\"request\");\n    detectAccountRequestPrototypeModifier(\"sendAsync\");\n    detectAccountRequestPrototypeModifier(\"send\");\n    const proxiedInPageProvider = new Proxy(inPageProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    const proxiedCommunicationProvider = new Proxy(communicationProvider, {\n      // straight up lie that we deleted the property so that it doesn't\n      // throw an error in strict mode\n      deleteProperty: () => true\n    });\n    this.provider = proxiedInPageProvider;\n    this.communicationProvider = proxiedCommunicationProvider;\n    await Promise.all([inPageProvider._initializeState(), communicationProvider._initializeState(_objectSpread(_objectSpread({}, providerParams), {}, {\n      dappStorageKey: this.dappStorageKey,\n      torusAlertContainer: this.torusAlertContainer,\n      torusIframe: this.torusIframe\n    }))]);\n    log.debug(\"Torus - injected provider\");\n  }\n\n}\n\nexport { BUTTON_POSITION, LOGIN_PROVIDER, PAYMENT_PROVIDER, TORUS_BUILD_ENV, TorusInPageProvider, Torus as default };","map":{"version":3,"mappings":"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","names":["errors","disconnected","permanentlyDisconnected","unsupportedSync","method","invalidDuplexStream","invalidOptions","maxEventListeners","invalidRequestArgs","invalidRequestMethod","invalidRequestParams","invalidLoggerObject","invalidLoggerMethod","info","connected","chainId","warnings","PAYMENT_PROVIDER","MOONPAY","WYRE","RAMPNETWORK","XANPOOL","MERCURYO","TRANSAK","TORUS_BUILD_ENV","PRODUCTION","DEVELOPMENT","TESTING","BUTTON_POSITION","BOTTOM_LEFT","TOP_LEFT","BOTTOM_RIGHT","TOP_RIGHT","LOGIN_PROVIDER","GOOGLE","FACEBOOK","REDDIT","DISCORD","TWITCH","APPLE","LINE","GITHUB","KAKAO","LINKEDIN","TWITTER","WEIBO","WECHAT","EMAIL_PASSWORDLESS","translations","en","embed","continue","actionRequired","pendingAction","cookiesRequired","enableCookies","clickHere","de","ja","ko","zh","supportedVerifierList","api","prodTorusUrl","localStorageKey","window","location","hostname","loglevel","getLogger","createErrorMiddleware","req","res","next","error","ethErrors","rpc","invalidRequest","message","data","done","log","logStreamDisconnectWarning","remoteLabel","emitter","warningMsg","stack","warn","listenerCount","emit","getWindowId","Math","random","toString","slice","getTorusUrl","buildEnv","torusUrl","logLevel","getUserLanguage","userLanguage","navigator","language","userLanguages","split","Object","prototype","hasOwnProperty","call","config","FEATURES_PROVIDER_CHANGE_WINDOW","height","width","FEATURES_DEFAULT_WALLET_WINDOW","FEATURES_DEFAULT_POPUP_WINDOW","FEATURES_CONFIRM_WINDOW","storageAvailable","type","storage","x","setItem","removeItem","e","code","name","length","getPopupFeatures","w","h","dualScreenLeft","screenLeft","undefined","screenX","dualScreenTop","screenTop","screenY","innerWidth","document","documentElement","clientWidth","screen","innerHeight","clientHeight","systemZoom","left","abs","top","features","getNetworkConfig","label","blockExplorerUrl","displayName","logo","rpcTarget","ticker","tickerName","BaseProvider","SafeEventEmitter","constructor","connectionStream","jsonRpcStreamName","isDuplexStream","Error","messages","isTorus","setMaxListeners","_handleConnect","bind","_handleDisconnect","_handleStreamDisconnect","_rpcRequest","_initializeState","request","sendAsync","mux","ObjectMultiplex","pump","ignoreStream","jsonRpcConnection","createStreamMiddleware","stream","createStream","rpcEngine","JRPCEngine","push","createIdRemapMiddleware","createLoggerMiddleware","origin","middleware","_rpcEngine","jsonRpcConnectionEvents","events","args","Array","isArray","params","Promise","resolve","reject","getRpcPromiseCallback","send","payload","callback","streamName","handleEvent","handle","eventName","handler","handlerArgs","handlerWrapper","removeEventListener","addEventListener","documentReady","readyState","htmlToElement","html","template","createElement","trimmedHtml","trim","innerHTML","content","firstChild","PopupHandler","url","target","windowTimer","iClosedWindow","_setupTimer","Number","setInterval","closed","clearInterval","open","href","_this$window","focus","close","redirect","locationReplaceOnRedirect","replace","TorusCommunicationProvider","_state","_defaultState","dappStorageKey","languageTranslations","configuration","embedTranslations","windowRefs","on","isConnected","notificationHandler","COMMUNICATION_NOTIFICATIONS","IFRAME_STATUS","isFullScreen","rid","_displayIframe","isFull","CREATE_WINDOW","windowId","_createPopupBlockAlert","CLOSE_WINDOW","_handleCloseWindow","USER_LOGGED_IN","currentLoginProvider","isLoggedIn","USER_LOGGED_OUT","isIFrameFullScreen","torusAlertContainer","torusIframe","COMMUNICATION_JRPC_METHODS","GET_PROVIDER_STATE","initialized","_handleWindow","finalUrl","URL","hash","handledWindow","OPENED_WINDOW","once","CLOSED_WINDOW","style","display","torusWidgetVisibility","buttonPosition","right","bottom","assign","hideTorusButton","showTorusButton","cb","_payload","jsonrpc","tryWindowHandle","debug","isRecoverable","errorMessage","isPermanentlyDisconnected","EthereumRpcError","logoUrl","getLogoUrl","torusAlert","successAlert","btnContainer","appendChild","bindOnLoad","remove","children","attachOnLoad","hasEmittedConnection","TorusInPageProvider","selectedAddress","_handleAccountsChanged","_handleChainChanged","_handleUnlockStateChanged","jsonRpcNotificationHandler","PROVIDER_NOTIFICATIONS","ACCOUNTS_CHANGED","UNLOCK_STATE_CHANGED","CHAIN_CHANGED","accounts","isUnlocked","PROVIDER_JRPC_METHODS","isInternal","err","result","isEthAccounts","finalAccounts","account","dequal","imgExists","img","onload","onerror","src","getSiteName","siteName","querySelector","metaTitle","title","getSiteIcon","icon","from","querySelectorAll","find","_icon","Boolean","getSiteMetadata","PROVIDER_UNSAFE_METHODS","COMMUNICATION_UNSAFE_METHODS","SET_PROVIDER","isLocalStorageAvailable","preLoadIframe","torusIframeHtml","crossOrigin","rel","relList","supports","head","Torus","modalZIndex","isInitialized","requestedLoginProvider","alertZIndex","communicationProvider","init","enableLogging","network","useLocalStorage","apiKey","extraParams","setAPIKey","setDefaultLevel","enableAll","disableAll","handleDappStorageKey","torusIframeUrl","pathname","endsWith","hashParams","URLSearchParams","append","styleLink","handleSetup","body","dappMetadata","contentWindow","postMessage","_setupWeb3","torus","login","loginProvider","provider","login_hint","logout","LOGOUT","cleanUp","clearInit","isElement","element","Element","Document","contains","setProvider","showWallet","path","instanceId","WALLET_INSTANCE_ID","finalPath","searchParams","keys","forEach","walletWindow","getUserInfo","userInfoResponse","USER_INFO","initiateTopup","topupResponse","TOPUP","sendTransaction","transaction","response","serialize","requireAllSignatures","signTransaction","buf","Buffer","sendTx","Transaction","signAllTransactions","transactions","encodedTransactions","map","allSignedTransaction","msg","signMessage","getGaslessPublicKey","storedKey","localStorage","getItem","generatedKey","providerParams","providerStream","BasePostMessageStream","targetWindow","communicationStream","inPageProvider","includes","detectAccountRequestPrototypeModifier","m","originalMethod","self","providerFunc","then","catch","apply","proxiedInPageProvider","Proxy","deleteProperty","proxiedCommunicationProvider","all"],"sources":["../src/messages.ts","../src/interfaces.ts","../src/config.ts","../src/loglevel.ts","../src/utils.ts","../src/baseProvider.ts","../src/embedUtils.ts","../src/PopupHandler.ts","../src/communicationProvider.ts","../src/inPageProvider.ts","../src/siteMetadata.ts","../src/embed.ts"],"sourcesContent":[null,null,null,null,null,null,null,null,null,null,null,null]},"metadata":{},"sourceType":"module"}